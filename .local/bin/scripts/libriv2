#!/bin/bash

book_dir="/home/$USER/GoogleDrive/UniversitÃ /Libri/" # dotfile directory
nested_levels="1" # number of nested levels to search for dotfiles
file_extensions=(".pdf")

# check if "fzf" and "git" are installed
dependencies="rofi"
for dependency in $dependencies; do
    if ! command -v "$dependency" >/dev/null 2>&1; then
        echo "Error: $dependency is not installed"
        exit 1
    fi
done

#exit on error
set -e

# check if the dotfile dir exists
if [ ! -d "$book_dir" ]; then
    # exit 
    echo "Dot directory does not exist: $book_dir"
    exit 1
fi

# creates a regex pattern for the dotfile extensions
buildDotFileRegex() {
    regex=""
    for ext in "${dot_file_extensions[@]}"; do
        if [ -z "$regex" ]; then
            regex="$ext"
        else
            regex="$regex|$ext"
        fi
    done
    regex="($regex)$" #only match end of string
    echo "$regex"
}

# returns all dotfiles in the dot directory, that match the dotfile regex
getDotFiles() {
    # get all files from x nested directories
    files=$(ls "$book_dir")

        # if gitignored files is not empty
        if [ -n "$gitignored_files" ]; then
            # remove gitignored files from the list
            files=$(echo "$files" | grep -v -E "$gitignored_files")
        fi

    # remove all files that don't end with one of the dot file extensions regex
    files=$(echo "$files" | grep -E "$(buildDotFileRegex)")
    echo "$files"
}

# show the files using fzf
cd "$book_dir"
files=$(getDotFiles)
if [ -n "$files" ]; then
    files=$(echo "$files" | rofi -dmenu -i -theme ~/.config/rofi/dracula.rasi)
    if [ -n "$files" ]; then
        # open the file if it is selected 
        zathura "$files"
    fi
fi

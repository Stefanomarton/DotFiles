(defwidget bar []
  (centerbox :orientation "h"
    (workspaces0)
    (window-title-widget)
    (sidestuff)))

(defwidget left-stuff []
           (box :orientation "h" :halign "start"
            (workspaces0)
            (window-title-widget)))

(defwidget sidestuff []
           (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
                (music)
                (metric :label "ï€¨"
                        :value volume
                        :onchange "amixer -D pulse sset Master {}%")
                (metric :label "ï¡š"
                        :value {EWW_RAM.used_mem_perc}
                        :onchange "")
                (box :class "time" :orientation "h" :space-evenly false :halign "end"
                     time)
                (box :class "date" :orientation "h" :space-evenly false :halign "end"
                     date)
                (systray
                 :spacing 1
                 :orientation "h"
                 :space-evenly true
                 :icon-size 20)))

(deflisten workspace0
  "~/.config/eww/scripts/workspace.sh 0")

(defwidget workspaces0 []
           (literal :content workspace0))

(deflisten window-title-listen
           "~/.dotfiles/.config/eww/scripts/get_window_title.sh")

(defwidget window-title-widget []
    (label :text "${window-title-listen}"))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "ðŸŽµ ${music}" : ""}))

(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))

(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :interval "1s"
  "scripts/getvol")

(defpoll time :interval "10s"
  "date '+%H:%M'")

(defpoll date :interval "10s"
  "date '+%A %B %d, %Y'")

(defwidget tray []
           (systray
            :spacing 1))

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :exclusive true
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "10px"
                      :anchor "top center")
  (bar))

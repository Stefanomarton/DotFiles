(undo-tree-save-format-version . 1)
"a35c7fea88817c8cced07f00c46855d229776044"
[nil nil nil nil (25466 30911 307401 841000) 0 nil]
([nil nil ((543 . 547) (t 25466 30885 111207 155000)) ((#("dsaD" 0 4 (fontified t)) . 543) (undo-tree-id0 . -3) (undo-tree-id1 . -3)) (25466 30911 563778 999000) 0 nil])
([nil nil ((#("dsaD" 0 4 (fontified t)) . 543) (undo-tree-id2 . -3)) nil (25466 30974 722372 22000) 0 nil])
([nil nil ((1911 . 1919)) nil (25466 30974 722423 972000) 0 nil])
([nil nil ((1539 . 1559) (1532 . 1539) (#("e" 0 1 (fontified t)) . -1532) (undo-tree-id30 . -1) 1533 (1522 . 1533) (1519 . 1522) 1498) nil (25466 30996 647559 958000) 0 nil] [nil nil ((nil rear-nonsticky nil 1502 . 1503) (nil fontified nil 1499 . 1503) (1499 . 1503) 1498) ((#("dsaD" 0 3 (fontified nil) 3 4 (fontified nil rear-nonsticky nil)) . 1499) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (nil rear-nonsticky t 1502 . 1503)) (25466 30974 722346 34000) 0 nil])
([nil nil ((1545 . 1547) (#(" " 0 1 (fontified t)) . -1545) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 1546) nil (25466 31084 513254 655000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -2123) (undo-tree-id44 . -1) (#(" " 0 1 (fontified t)) . -2124) (undo-tree-id45 . -1) (#(" " 0 1 (fontified t)) . -2125) (undo-tree-id46 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . -2126) (undo-tree-id47 . 1) (undo-tree-id48 . 1) (undo-tree-id49 . -1) (undo-tree-id50 . 1) (undo-tree-id51 . -1) 2127 (2122 . 2123) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -2122) (undo-tree-id52 . -1) (undo-tree-id53 . 1) (undo-tree-id54 . -1) 2123 (2111 . 2123) (#("l" 0 1 (fontified t)) . -2111) (undo-tree-id55 . -1) (#("e" 0 1 (fontified t)) . -2112) (undo-tree-id56 . -1) 2113 (2112 . 2113) (#("e" 0 1 (fontified t)) . -2112) (undo-tree-id57 . -1) (#("e" 0 1 (fontified t)) . -2113) (undo-tree-id58 . -1) (#("c" 0 1 (fontified t)) . -2114) (undo-tree-id59 . -1) 2115 (2114 . 2115) (2093 . 2114) (#("t" 0 1 (fontified t)) . -2093) (undo-tree-id60 . -1) (#("e" 0 1 (fontified t)) . -2094) (undo-tree-id61 . -1) 2095 (2093 . 2095) (2085 . 2093) (2076 . 2085) (#("z" 0 1 (fontified t face font-lock-string-face)) . -2076) (undo-tree-id62 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -2077) (undo-tree-id63 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -2078) (undo-tree-id64 . -1) 2079 (2076 . 2079) (#("t" 0 1 (fontified t face font-lock-string-face)) . -2076) (undo-tree-id65 . -1) 2077 (2072 . 2077) (#("D" 0 1 (fontified t)) . -2072) (undo-tree-id66 . -1) (#("f" 0 1 (fontified t)) . -2073) (undo-tree-id67 . -1) 2074 (2072 . 2074) (#("D" 0 1 (fontified t)) . -2072) (undo-tree-id68 . -1) (#("f" 0 1 (fontified t)) . -2073) (undo-tree-id69 . -1) 2074 (2062 . 2074) (#("t" 0 1 (fontified t)) . -2062) (undo-tree-id70 . -1) 2063 (2051 . 2063) (2042 . 2051) (2040 . 2042) (2032 . 2040) (2026 . 2032) (#(" " 0 1 (fontified nil)) . 2025) (undo-tree-id71 . -1) (2026 . 2027) (2015 . 2026) (#("t" 0 1 (fontified t)) . -2015) (undo-tree-id72 . -1) (#("e" 0 1 (fontified t)) . -2016) (undo-tree-id73 . -1) (#("x" 0 1 (fontified t)) . -2017) (undo-tree-id74 . -1) (#("-" 0 1 (fontified t)) . -2018) (undo-tree-id75 . -1) 2019 (2018 . 2019) (2017 . 2018) (#("X" 0 1 (fontified t)) . -2017) (undo-tree-id76 . -1) (#("-" 0 1 (fontified t)) . -2018) (undo-tree-id77 . -1) 2019 (2013 . 2019) (#("l" 0 1 (fontified t)) . -2013) (undo-tree-id78 . -1) (#("a" 0 1 (fontified t)) . -2014) (undo-tree-id79 . -1) (#("t" 0 1 (fontified t)) . -2015) (undo-tree-id80 . -1) (#("e" 0 1 (fontified t)) . -2016) (undo-tree-id81 . -1) 2017 (2007 . 2017) (#("o" 0 1 (fontified t face font-lock-builtin-face)) . -2007) (undo-tree-id82 . -1) 2008 (2006 . 2008) (2004 . 2006) (1993 . 1995) (2001 . 2002) (1998 . 2001) (1993 . 1998) (1994 . 1996) (#("  " 0 2 (fontified nil)) . 1993) (undo-tree-id83 . -2) (1992 . 1996) (1991 . 1992) (#("a" 0 1 (fontified t)) . -1991) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("u" 0 1 (fontified t)) . -1992) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("c" 0 1 (fontified t)) . -1993) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("t" 0 1 (fontified t)) . -1994) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("e" 0 1 (fontified t)) . -1995) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("x" 0 1 (fontified t)) . -1996) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) 1997 (1976 . 1977) (#("t" 0 1 (fontified t face font-lock-constant-face)) . -1976) (undo-tree-id102 . -1) 1977 (1974 . 1977) (t 25466 31086 311650 669000)) nil (25466 31313 909713 249000) 0 nil] [nil nil ((1988 . 1989) (#("a" 0 1 (fontified t)) . -1988) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("u" 0 1 (fontified t)) . -1989) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("c" 0 1 (fontified t)) . -1990) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("t" 0 1 (fontified t)) . -1991) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("e" 0 1 (fontified t)) . -1992) (undo-tree-id39 . -1) (#("x" 0 1 (fontified t)) . -1993) (undo-tree-id40 . -1) 1994 (t 25466 30996 657870 365000)) ((1988 . 1994) (#("t" 0 1 (fontified t)) . 1988)) (25466 31083 717754 115000) 0 nil])
([nil nil ((2076 . 2077) (#("Z" 0 1 (face font-lock-string-face fontified t)) . -2076) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 2077 (t 25466 31313 932064 698000)) nil (25466 32019 452139 958000) 0 nil])
([nil nil ((2484 . 2723) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face)) 1 19 (fontified nil) 19 22 (fontified nil face font-lock-comment-delimiter-face) 22 60 (fontified nil face font-lock-comment-face) 60 61 (fontified nil) 61 64 (fontified nil face font-lock-comment-delimiter-face) 64 105 (fontified nil face font-lock-comment-face) 105 125 (fontified nil face font-lock-comment-face) 125 126 (fontified nil) 126 129 (fontified nil face font-lock-comment-delimiter-face) 129 183 (fontified nil face font-lock-comment-face) 183 184 (fontified nil) 184 187 (fontified nil face font-lock-comment-delimiter-face) 187 237 (fontified nil face font-lock-comment-face) 237 238 (fontified nil) 238 239 (fontified nil face (rainbow-delimiters-depth-1-face))) . -2484) (2481 . 2483) (#("
" 0 1 (fontified nil)) . -2481) (2369 . 2482) (#(" " 0 1 (fontified nil)) . 2369) (2339 . 2370) (#("
" 0 1 (fontified nil)) . -2339) (2258 . 2340) (#(" " 0 1 (fontified nil)) . 2258) (1992 . 2259) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '(\"1a1ac598737d0fcdc4dfab3af3d6f46ab2d5048b8e72bc22f50271fd6d393a00\" default))
 '(package-selected-packages
   '(undo-tree auctex doom-themes doom-theme all-the-icons evil doom-modeline command-log-mode use-package)))" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face)) 1 23 (fontified nil) 23 26 (fontified nil face font-lock-comment-delimiter-face) 26 68 (fontified nil face font-lock-comment-face) 68 69 (fontified nil) 69 72 (fontified nil face font-lock-comment-delimiter-face) 72 94 (fontified nil face font-lock-comment-face) 94 96 (fontified nil face font-lock-comment-face) 96 133 (fontified nil face font-lock-comment-face) 133 134 (fontified nil) 134 137 (fontified nil face font-lock-comment-delimiter-face) 137 191 (fontified nil face font-lock-comment-face) 191 192 (fontified nil) 192 195 (fontified nil face font-lock-comment-delimiter-face) 195 245 (fontified nil face font-lock-comment-face) 245 247 (fontified nil) 247 248 (fontified nil face (rainbow-delimiters-depth-2-face)) 248 271 (fontified nil) 271 272 (fontified nil face (rainbow-delimiters-depth-3-face)) 272 338 (fontified nil face font-lock-string-face) 338 346 (fontified nil) 346 347 (fontified nil face (rainbow-delimiters-depth-3-face)) 347 348 (fontified nil face (rainbow-delimiters-depth-2-face)) 348 351 (fontified nil) 351 352 (fontified nil face (rainbow-delimiters-depth-2-face)) 352 382 (fontified nil) 382 383 (fontified nil face (rainbow-delimiters-depth-3-face)) 383 484 (fontified nil) 484 485 (fontified nil face (rainbow-delimiters-depth-3-face)) 485 486 (fontified nil face (rainbow-delimiters-depth-2-face)) 486 487 (fontified nil face (rainbow-delimiters-depth-1-face))) . -1992)) ((1992 . 2479) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes " 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 23 (fontified t) 23 26 (fontified t face font-lock-comment-delimiter-face) 26 68 (fontified t face font-lock-comment-face) 68 69 (fontified t) 69 72 (fontified t face font-lock-comment-delimiter-face) 72 133 (fontified t face font-lock-comment-face) 133 134 (fontified t) 134 137 (fontified t face font-lock-comment-delimiter-face) 137 191 (fontified t face font-lock-comment-face) 191 192 (fontified t) 192 195 (fontified t face font-lock-comment-delimiter-face) 195 245 (fontified t face font-lock-comment-face) 245 247 (fontified nil) 247 248 (fontified nil face (rainbow-delimiters-depth-2-face)) 248 266 (fontified nil) 266 267 (fontified nil)) . 1992) (2258 . 2259) (#("
   '(\"1a1ac598737d0fcdc4dfab3af3d6f46ab2d5048b8e72bc22f50271fd6d393a00\" default)
" 0 1 (fontified t) 1 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil face (rainbow-delimiters-depth-3-face)) 6 72 (fontified nil face font-lock-string-face) 72 80 (fontified nil) 80 81 (fontified nil face (rainbow-delimiters-depth-3-face)) 81 82 (fontified nil)) . 2258) (2339 . 2340) (#(")
 '(package-selected-packages " 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 2 (fontified t) 2 4 (fontified nil) 4 5 (fontified nil face (rainbow-delimiters-depth-2-face)) 5 30 (fontified nil) 30 31 (fontified nil)) . 2339) (2369 . 2370) (#("
   '(tex undo-tree auctex doom-themes doom-theme all-the-icons evil doom-modeline command-log-mode use-package)
" 0 1 (fontified t) 1 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil face (rainbow-delimiters-depth-3-face)) 6 111 (fontified nil) 111 112 (fontified nil face (rainbow-delimiters-depth-3-face)) 112 113 (fontified nil)) . 2369) (2481 . 2482) (#("))" 0 1 (fontified t face (rainbow-delimiters-depth-2-face)) 1 2 (fontified t face (rainbow-delimiters-depth-1-face))) . 2481) (2484 . 2723) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 19 (fontified t) 19 22 (fontified t face font-lock-comment-delimiter-face) 22 60 (fontified t face font-lock-comment-face) 60 61 (fontified t) 61 64 (fontified t face font-lock-comment-delimiter-face) 64 125 (fontified t face font-lock-comment-face) 125 126 (fontified t) 126 129 (fontified t face font-lock-comment-delimiter-face) 129 183 (fontified t face font-lock-comment-face) 183 184 (fontified t) 184 187 (fontified t face font-lock-comment-delimiter-face) 187 237 (fontified t face font-lock-comment-face) 237 238 (fontified t) 238 239 (fontified t face (rainbow-delimiters-depth-1-face))) . 2484) (t . 0)) (25466 31083 329405 13000) 0 nil])
([nil nil ((2093 . 2094) (#("T" 0 1 (fontified t)) . -2093) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 2094 (2095 . 2096) (#("X" 0 1 (fontified t)) . -2095) (undo-tree-id11 . -1) 2096 (t 25466 32019 462121 147000)) nil (25466 32071 198079 211000) 0 nil])
([nil nil ((1987 . 1989) (#(" t" 0 2 (fontified t)) . 1987) (t . 0)) ((1987 . 1989) (#(" t" 0 2 (fontified t)) . 1987) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1)) (25466 31083 329228 941000) 0 nil])
([nil nil ((2093 . 2094) (#("t" 0 1 (fontified t)) . -2093) (undo-tree-id61 . -1) 2094 (2095 . 2096) (#("x" 0 1 (fontified t)) . -2095) (undo-tree-id62 . -1) 2096 (t 25466 32071 208184 321000)) nil (25466 32272 222722 891000) 0 nil])
nil
([nil nil ((2124 . 2125) 2124) nil (25466 32323 677387 408000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2371 . 2372) (nil fontified nil 2124 . 2125) (nil fontified nil 2125 . 2130) (nil fontified nil 2130 . 2131) (nil fontified nil 2131 . 2144) (nil fontified nil 2144 . 2145) (nil fontified nil 2145 . 2146) (nil fontified nil 2146 . 2147) (nil fontified nil 2147 . 2149) (nil fontified nil 2149 . 2150) (nil fontified nil 2150 . 2186) (nil fontified nil 2186 . 2187) (nil fontified nil 2187 . 2188) (nil fontified nil 2188 . 2189) (nil fontified nil 2189 . 2190) (nil fontified nil 2190 . 2191) (nil fontified nil 2191 . 2192) (nil fontified nil 2192 . 2193) (nil fontified nil 2193 . 2194) (nil fontified nil 2194 . 2195) (nil fontified nil 2195 . 2196) (nil fontified nil 2196 . 2197) (nil fontified nil 2197 . 2198) (nil fontified nil 2198 . 2199) (nil fontified nil 2199 . 2200) (nil fontified nil 2200 . 2201) (nil fontified nil 2201 . 2202) (nil fontified nil 2202 . 2203) (nil fontified nil 2203 . 2204) (nil fontified nil 2204 . 2205) (nil fontified nil 2205 . 2206) (nil fontified nil 2206 . 2207) (nil fontified nil 2207 . 2208) (nil fontified nil 2208 . 2209) (nil fontified nil 2209 . 2210) (nil fontified nil 2210 . 2211) (nil fontified nil 2211 . 2212) (nil fontified nil 2212 . 2213) (nil fontified nil 2213 . 2214) (nil fontified nil 2214 . 2215) (nil fontified nil 2215 . 2216) (nil fontified nil 2216 . 2217) (nil fontified nil 2217 . 2218) (nil fontified nil 2218 . 2219) (nil fontified nil 2219 . 2220) (nil fontified nil 2220 . 2221) (nil fontified nil 2221 . 2222) (nil fontified nil 2222 . 2223) (nil fontified nil 2223 . 2224) (nil fontified nil 2224 . 2225) (nil fontified nil 2225 . 2226) (nil fontified nil 2226 . 2227) (nil fontified nil 2227 . 2228) (nil fontified nil 2228 . 2229) (nil fontified nil 2229 . 2230) (nil fontified nil 2230 . 2231) (nil fontified nil 2231 . 2232) (nil fontified nil 2232 . 2233) (nil fontified nil 2233 . 2234) (nil fontified nil 2234 . 2236) (nil fontified nil 2236 . 2237) (nil fontified nil 2237 . 2241) (nil fontified nil 2241 . 2270) (nil fontified nil 2270 . 2271) (nil fontified nil 2271 . 2272) (nil fontified nil 2272 . 2283) (nil fontified nil 2283 . 2284) (nil fontified nil 2284 . 2285) (nil fontified nil 2285 . 2286) (nil fontified nil 2286 . 2287) (nil fontified nil 2287 . 2288) (nil fontified nil 2288 . 2289) (nil fontified nil 2289 . 2290) (nil fontified nil 2290 . 2291) (nil fontified nil 2291 . 2292) (nil fontified nil 2292 . 2293) (nil fontified nil 2293 . 2294) (nil fontified nil 2294 . 2295) (nil fontified nil 2295 . 2297) (nil fontified nil 2297 . 2299) (nil fontified nil 2299 . 2326) (nil fontified nil 2326 . 2328) (nil fontified nil 2328 . 2329) (nil fontified nil 2329 . 2330) (2124 . 2372)) ((#("(defun my-LaTeX-mode()
  (add-to-list 'TeX-view-program-list '(\"Evince\" \"evince --page-index=%(outpage) %o\"))
  (setq TeX-view-program-selection '((output-pdf \"Evince\")))
  ; Other mode specific config
  )
(add-hook 'LaTeX-mode-hook 'my-LaTeX-mode)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 6 (face font-lock-keyword-face fontified nil) 6 7 (fontified nil) 7 20 (face font-lock-function-name-face fontified nil) 20 21 (face (rainbow-delimiters-depth-2-face) fontified nil) 21 22 (face (rainbow-delimiters-depth-2-face) fontified nil) 22 23 (fontified nil) 23 25 (fontified nil) 25 26 (face (rainbow-delimiters-depth-2-face) fontified nil) 26 62 (fontified nil) 62 63 (face (rainbow-delimiters-depth-3-face) fontified nil) 63 64 (face font-lock-string-face fontified nil) 64 65 (face font-lock-string-face fontified nil) 65 66 (face font-lock-string-face fontified nil) 66 67 (face font-lock-string-face fontified nil) 67 68 (face font-lock-string-face fontified nil) 68 69 (face font-lock-string-face fontified nil) 69 70 (face font-lock-string-face fontified nil) 70 71 (face font-lock-string-face fontified nil) 71 72 (fontified nil) 72 73 (face font-lock-string-face fontified nil) 73 74 (face font-lock-string-face fontified nil) 74 75 (face font-lock-string-face fontified nil) 75 76 (face font-lock-string-face fontified nil) 76 77 (face font-lock-string-face fontified nil) 77 78 (face font-lock-string-face fontified nil) 78 79 (face font-lock-string-face fontified nil) 79 80 (face font-lock-string-face fontified nil) 80 81 (face font-lock-string-face fontified nil) 81 82 (face font-lock-string-face fontified nil) 82 83 (face font-lock-string-face fontified nil) 83 84 (face font-lock-string-face fontified nil) 84 85 (face font-lock-string-face fontified nil) 85 86 (face font-lock-string-face fontified nil) 86 87 (face font-lock-string-face fontified nil) 87 88 (face font-lock-string-face fontified nil) 88 89 (face font-lock-string-face fontified nil) 89 90 (face font-lock-string-face fontified nil) 90 91 (face font-lock-string-face fontified nil) 91 92 (face font-lock-string-face fontified nil) 92 93 (face font-lock-string-face fontified nil) 93 94 (face font-lock-string-face fontified nil) 94 95 (face font-lock-string-face fontified nil) 95 96 (face font-lock-string-face fontified nil) 96 97 (face font-lock-string-face fontified nil) 97 98 (face font-lock-string-face fontified nil) 98 99 (face font-lock-string-face fontified nil) 99 100 (face font-lock-string-face fontified nil) 100 101 (face font-lock-string-face fontified nil) 101 102 (face font-lock-string-face fontified nil) 102 103 (face font-lock-string-face fontified nil) 103 104 (face font-lock-string-face fontified nil) 104 105 (face font-lock-string-face fontified nil) 105 106 (face font-lock-string-face fontified nil) 106 107 (face font-lock-string-face fontified nil) 107 108 (face (rainbow-delimiters-depth-3-face) fontified nil) 108 109 (face (rainbow-delimiters-depth-2-face) fontified nil) 109 110 (fontified nil) 110 112 (fontified nil) 112 113 (face (rainbow-delimiters-depth-2-face) fontified nil) 113 117 (face font-lock-keyword-face fontified nil) 117 146 (fontified nil) 146 147 (face (rainbow-delimiters-depth-3-face) fontified nil) 147 148 (face (rainbow-delimiters-depth-4-face) fontified nil) 148 159 (fontified nil) 159 160 (face font-lock-string-face fontified nil) 160 161 (face font-lock-string-face fontified nil) 161 162 (face font-lock-string-face fontified nil) 162 163 (face font-lock-string-face fontified nil) 163 164 (face font-lock-string-face fontified nil) 164 165 (face font-lock-string-face fontified nil) 165 166 (face font-lock-string-face fontified nil) 166 167 (face font-lock-string-face fontified nil) 167 168 (face (rainbow-delimiters-depth-4-face) fontified nil) 168 169 (face (rainbow-delimiters-depth-3-face) fontified nil) 169 170 (face (rainbow-delimiters-depth-2-face) fontified nil) 170 171 (fontified nil) 171 173 (fontified nil) 173 175 (face font-lock-comment-delimiter-face fontified nil) 175 202 (face font-lock-comment-face fontified nil) 202 204 (fontified nil) 204 205 (face (rainbow-delimiters-depth-1-face) fontified nil) 205 206 (fontified nil) 206 207 (face (rainbow-delimiters-depth-1-face) fontified nil) 207 247 (fontified nil) 247 248 (face (rainbow-delimiters-depth-1-face) fontified nil rear-nonsticky nil)) . 2124) (undo-tree-id453 . 145) (undo-tree-id454 . -73) (undo-tree-id455 . -74) (undo-tree-id456 . -73) (undo-tree-id457 . -73) (undo-tree-id458 . -73) (undo-tree-id459 . -73) (undo-tree-id460 . -73) (undo-tree-id461 . -73) (undo-tree-id462 . -73) (undo-tree-id463 . -73) (undo-tree-id464 . -73) (undo-tree-id465 . -73) (undo-tree-id466 . -73) (undo-tree-id467 . -73) (undo-tree-id468 . -73) (undo-tree-id469 . -23) (undo-tree-id470 . -74) (undo-tree-id471 . -74) (undo-tree-id472 . -74) (undo-tree-id473 . -74) (undo-tree-id474 . -74) (undo-tree-id475 . -74) (undo-tree-id476 . -74) (undo-tree-id477 . -74) (undo-tree-id478 . -74) (undo-tree-id479 . -74) (undo-tree-id480 . -74) (undo-tree-id481 . -74) (undo-tree-id482 . -74) (undo-tree-id483 . -74) (undo-tree-id484 . -74) (undo-tree-id485 . -74) (undo-tree-id486 . -74) (undo-tree-id487 . -74) (undo-tree-id488 . -74) (undo-tree-id489 . -74) (undo-tree-id490 . -74) (undo-tree-id491 . -74) (undo-tree-id492 . -74) (nil fontified t 2329 . 2330) (nil fontified t 2328 . 2329) (nil fontified t 2326 . 2328) (nil fontified t 2299 . 2326) (nil fontified t 2297 . 2299) (nil fontified t 2295 . 2297) (nil fontified t 2294 . 2295) (nil fontified t 2293 . 2294) (nil fontified t 2292 . 2293) (nil fontified t 2291 . 2292) (nil fontified t 2290 . 2291) (nil fontified t 2289 . 2290) (nil fontified t 2288 . 2289) (nil fontified t 2287 . 2288) (nil fontified t 2286 . 2287) (nil fontified t 2285 . 2286) (nil fontified t 2284 . 2285) (nil fontified t 2283 . 2284) (nil fontified t 2272 . 2283) (nil fontified t 2271 . 2272) (nil fontified t 2270 . 2271) (nil fontified t 2241 . 2270) (nil fontified t 2237 . 2241) (nil fontified t 2236 . 2237) (nil fontified t 2234 . 2236) (nil fontified t 2233 . 2234) (nil fontified t 2232 . 2233) (nil fontified t 2231 . 2232) (nil fontified t 2230 . 2231) (nil fontified t 2229 . 2230) (nil fontified t 2228 . 2229) (nil fontified t 2227 . 2228) (nil fontified t 2226 . 2227) (nil fontified t 2225 . 2226) (nil fontified t 2224 . 2225) (nil fontified t 2223 . 2224) (nil fontified t 2222 . 2223) (nil fontified t 2221 . 2222) (nil fontified t 2220 . 2221) (nil fontified t 2219 . 2220) (nil fontified t 2218 . 2219) (nil fontified t 2217 . 2218) (nil fontified t 2216 . 2217) (nil fontified t 2215 . 2216) (nil fontified t 2214 . 2215) (nil fontified t 2213 . 2214) (nil fontified t 2212 . 2213) (nil fontified t 2211 . 2212) (nil fontified t 2210 . 2211) (nil fontified t 2209 . 2210) (nil fontified t 2208 . 2209) (nil fontified t 2207 . 2208) (nil fontified t 2206 . 2207) (nil fontified t 2205 . 2206) (nil fontified t 2204 . 2205) (nil fontified t 2203 . 2204) (nil fontified t 2202 . 2203) (nil fontified t 2201 . 2202) (nil fontified t 2200 . 2201) (nil fontified t 2199 . 2200) (nil fontified t 2198 . 2199) (nil fontified t 2197 . 2198) (nil fontified t 2196 . 2197) (nil fontified t 2195 . 2196) (nil fontified t 2194 . 2195) (nil fontified t 2193 . 2194) (nil fontified t 2192 . 2193) (nil fontified t 2191 . 2192) (nil fontified t 2190 . 2191) (nil fontified t 2189 . 2190) (nil fontified t 2188 . 2189) (nil fontified t 2187 . 2188) (nil fontified t 2186 . 2187) (nil fontified t 2150 . 2186) (nil fontified t 2149 . 2150) (nil fontified t 2147 . 2149) (nil fontified t 2146 . 2147) (nil fontified t 2145 . 2146) (nil fontified t 2144 . 2145) (nil fontified t 2131 . 2144) (nil fontified t 2130 . 2131) (nil fontified t 2125 . 2130) (nil fontified t 2124 . 2125) (nil rear-nonsticky t 2371 . 2372)) (25466 32324 429126 165000) 0 nil])
([nil nil ((2197 . 2204) (#("ez" 0 1 (face font-lock-string-face fontified nil) 1 2 (face font-lock-string-face fontified nil)) . 2197) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (2198 . 2199) (#("vince --page-index=%(outpage)" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t) 6 7 (face font-lock-string-face fontified t) 7 8 (face font-lock-string-face fontified t) 8 9 (face font-lock-string-face fontified t) 9 10 (face font-lock-string-face fontified t) 10 11 (face font-lock-string-face fontified t) 11 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face fontified t) 13 14 (face font-lock-string-face fontified t) 14 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 17 (face font-lock-string-face fontified t) 17 18 (face font-lock-string-face fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t) 20 21 (face font-lock-string-face fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face fontified t) 23 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t) 25 26 (face font-lock-string-face fontified t) 26 27 (face font-lock-string-face fontified t) 27 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face fontified t)) . 2198)) ((2198 . 2227) (#("z" 0 1 (face font-lock-string-face fontified nil)) . 2198) (2197 . 2199) (#("zathura" 0 7 (face font-lock-string-face fontified t)) . 2197) (undo-tree-id451 . -6) (undo-tree-id452 . -7) (t 25466 32279 508934 849000)) (25466 32324 583243 293000) 0 nil] [nil nil ((2198 . 2205) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2198) (undo-tree-id12 . -1) (#("z" 0 1 (face font-lock-string-face fontified t)) . -2199) (undo-tree-id13 . -1) 2200 (2199 . 2200) (#("v" 0 1 (face font-lock-string-face fontified t)) . -2199) (undo-tree-id14 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -2200) (undo-tree-id15 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -2201) (undo-tree-id16 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -2202) (undo-tree-id17 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2203) (undo-tree-id18 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -2204) (undo-tree-id19 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -2205) (undo-tree-id20 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -2206) (undo-tree-id21 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -2207) (undo-tree-id22 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -2208) (undo-tree-id23 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -2209) (undo-tree-id24 . -1) 2210 (#("e" 0 1 (face font-lock-string-face fontified t)) . -2210) (undo-tree-id25 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -2211) (undo-tree-id26 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -2212) (undo-tree-id27 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -2213) (undo-tree-id28 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -2214) (undo-tree-id29 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2215) (undo-tree-id30 . -1) (#("x" 0 1 (face font-lock-string-face fontified nil)) . -2216) (undo-tree-id31 . -1) (#("=" 0 1 (face font-lock-string-face fontified nil)) . -2217) (undo-tree-id32 . -1) (#("%" 0 1 (face font-lock-string-face fontified t)) . -2218) (undo-tree-id33 . -1) (#("(" 0 1 (face font-lock-string-face fontified t)) . -2219) (undo-tree-id34 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -2220) (undo-tree-id35 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -2221) (undo-tree-id36 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -2222) (undo-tree-id37 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -2223) (undo-tree-id38 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -2224) (undo-tree-id39 . -1) (#("g" 0 1 (face font-lock-string-face fontified t)) . -2225) (undo-tree-id40 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2226) (undo-tree-id41 . -1) (#(")" 0 1 (face font-lock-string-face fontified t)) . -2227) (undo-tree-id42 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -2228) (undo-tree-id43 . -1) (#("%" 0 1 (face font-lock-string-face fontified t)) . -2229) (undo-tree-id44 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -2230) (undo-tree-id45 . -1) 2231 (2287 . 2292) (#("h" 0 1 (face font-lock-string-face fontified t)) . -2287) (undo-tree-id46 . -1) (#("u" 0 1 (face font-lock-string-face fontified t)) . -2288) (undo-tree-id47 . -1) 2289 (2285 . 2289) (#("E" 0 1 (face font-lock-string-face fontified t)) . -2285) (undo-tree-id48 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -2286) (undo-tree-id49 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -2287) (undo-tree-id50 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -2288) (undo-tree-id51 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -2289) (undo-tree-id52 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2290) (undo-tree-id53 . -1) 2291 (2193 . 2195) (#("a" 0 1 (face font-lock-string-face fontified t)) . -2193) (undo-tree-id54 . -1) 2194 (2188 . 2194) (#("E" 0 1 (face font-lock-string-face fontified t)) . -2188) (undo-tree-id55 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -2189) (undo-tree-id56 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -2190) (undo-tree-id57 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -2191) (undo-tree-id58 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -2192) (undo-tree-id59 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2193) (undo-tree-id60 . -1) 2194) ((2188 . 2194) (#("Zathua" 0 5 (face font-lock-string-face fontified nil) 5 6 (face font-lock-string-face fontified nil)) . 2188) (2193 . 2194) (#("ra" 0 2 (face font-lock-string-face fontified nil)) . 2193) (2285 . 2291) (#("zahu" 0 2 (face font-lock-string-face fontified nil) 2 3 (face font-lock-string-face fontified nil) 3 4 (face font-lock-string-face fontified nil)) . 2285) (2287 . 2289) (#("thura" 0 5 (face font-lock-string-face fontified t)) . 2287) (2199 . 2231) (#("z" 0 1 (face font-lock-string-face fontified nil)) . 2199) (undo-tree-id63 . -1) (2198 . 2200) (#("zathura" 0 7 (face font-lock-string-face fontified t)) . 2198) (undo-tree-id64 . -6) (undo-tree-id65 . -6)) (25466 32272 222702 221000) 0 nil])
([nil nil ((2188 . 2195) (#("E" 0 1 (face font-lock-string-face fontified t)) . -2188) (undo-tree-id517 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -2189) (undo-tree-id518 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -2190) (undo-tree-id519 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -2191) (undo-tree-id520 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -2192) (undo-tree-id521 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -2193) (undo-tree-id522 . -1) 2194 (t 25466 32279 508934 849000)) nil (25466 32334 18795 118000) 0 nil])
nil
([nil nil ((#("Evince" 0 1 (face font-lock-string-face fontified t) 1 2 (face font-lock-string-face fontified t) 2 3 (face font-lock-string-face fontified t) 3 4 (face font-lock-string-face fontified t) 4 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t)) . 2262) (undo-tree-id515 . -5) (undo-tree-id516 . -1) 2263) nil (25466 32334 18785 566000) 0 nil])
([nil nil ((2262 . 2269)) nil (25466 32334 18772 543000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2620) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (t 25466 32334 30214 943000)) nil (25466 32546 637405 529000) 0 nil])
([nil nil ((2351 . 2352) (t 25466 32546 652633 312000) 2309) nil (25466 33171 830669 521000) 0 nil])
([nil nil ((2386 . 2387) (#("
" 0 1 (fontified t)) . -2386) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (#(" " 0 1 (fontified t)) . -2387) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (#(" " 0 1 (fontified t)) . -2388) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (#(":" 0 1 (fontified t)) . -2389) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (#("c" 0 1 (fontified t face font-lock-builtin-face)) . -2390) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (#("o" 0 1 (fontified t face font-lock-builtin-face)) . -2391) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (#("n" 0 1 (fontified t face font-lock-builtin-face)) . -2392) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (#("f" 0 1 (fontified t face font-lock-builtin-face)) . -2393) (undo-tree-id637 . -1) (#("i" 0 1 (fontified t face font-lock-builtin-face)) . -2394) (undo-tree-id638 . -1) (#("g" 0 1 (fontified t face font-lock-builtin-face)) . -2395) (undo-tree-id639 . -1) (#(" " 0 1 (fontified t)) . -2396) (undo-tree-id640 . -1) 2397 (2390 . 2397) (#("C" 0 1 (fontified t face font-lock-builtin-face)) . -2390) (undo-tree-id641 . -1) (#("o" 0 1 (fontified t face font-lock-builtin-face)) . -2391) (undo-tree-id642 . -1) (#("n" 0 1 (fontified t face font-lock-builtin-face)) . -2392) (undo-tree-id643 . -1) (#("f" 0 1 (fontified t face font-lock-builtin-face)) . -2393) (undo-tree-id644 . -1) (#("i" 0 1 (fontified t face font-lock-builtin-face)) . -2394) (undo-tree-id645 . -1) 2395 (2389 . 2395) (2386 . 2389) (2377 . 2386) (2374 . 2377) (2360 . 2374) (#("k" 0 1 (fontified t)) . -2360) (undo-tree-id646 . -1) (#("c" 0 1 (fontified t)) . -2361) (undo-tree-id647 . -1) (#("a" 0 1 (fontified t)) . -2362) (undo-tree-id648 . -1) (#("g" 0 1 (fontified t)) . -2363) (undo-tree-id649 . -1) (#("e" 0 1 (fontified t)) . -2364) (undo-tree-id650 . -1) 2365 (2357 . 2365) (#("p" 0 1 (fontified t)) . -2357) (undo-tree-id651 . -1) (#("a" 0 1 (fontified t)) . -2358) (undo-tree-id652 . -1) (#("c" 0 1 (fontified t)) . -2359) (undo-tree-id653 . -1) 2360 (2353 . 2360) (#("f" 0 1 (fontified t)) . -2353) (undo-tree-id654 . -1) (#("h" 0 1 (fontified t)) . -2354) (undo-tree-id655 . -1) (#("u" 0 1 (fontified t)) . -2355) (undo-tree-id656 . -1) (#("s" 0 1 (fontified t)) . -2356) (undo-tree-id657 . -1) 2357 (2353 . 2357) (#("f" 0 1 (fontified t)) . -2353) (undo-tree-id658 . -1) (#("h" 0 1 (fontified t)) . -2354) (undo-tree-id659 . -1) (#("u" 0 1 (fontified t)) . -2355) (undo-tree-id660 . -1) (#("s" 0 1 (fontified t)) . -2356) (undo-tree-id661 . -1) 2357 (2353 . 2357) (#("[" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -2353) (undo-tree-id662 . -1) (#("u" 0 1 (fontified t)) . -2354) (undo-tree-id663 . -1) 2355 (2353 . 2355) (2352 . 2353) (2351 . 2352) 2320) nil (25466 33338 326074 604000) 0 nil] [nil nil ((2352 . 2353) 2352) ((#("
" 0 1 (fontified t)) . 2352) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1)) (25466 33171 170555 773000) 0 nil])
([nil nil ((2887 . 3126) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face)) 1 19 (fontified nil) 19 22 (fontified nil face font-lock-comment-delimiter-face) 22 60 (fontified nil face font-lock-comment-face) 60 61 (fontified nil) 61 64 (fontified nil face font-lock-comment-delimiter-face) 64 125 (fontified nil face font-lock-comment-face) 125 126 (fontified nil) 126 129 (fontified nil face font-lock-comment-delimiter-face) 129 180 (fontified nil face font-lock-comment-face) 180 183 (fontified nil face font-lock-comment-face) 183 184 (fontified nil) 184 187 (fontified nil face font-lock-comment-delimiter-face) 187 237 (fontified nil face font-lock-comment-face) 237 238 (fontified nil) 238 239 (fontified nil face (rainbow-delimiters-depth-1-face))) . -2887) (2884 . 2886) (#("
" 0 1 (fontified nil)) . -2884) (2767 . 2885) (#(" " 0 1 (fontified nil)) . 2767) (2737 . 2768) (#("
" 0 1 (fontified nil)) . -2737) (2656 . 2738) (#(" " 0 1 (fontified nil)) . 2656) (2390 . 2657) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
  '(\"1a1ac598737d0fcdc4dfab3af3d6f46ab2d5048b8e72bc22f50271fd6d393a00\" default))
 '(package-selected-packages
   '(undo-tree auctex doom-themes doom-theme all-the-icons evil doom-modeline command-log-mode use-package)))" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face)) 1 23 (fontified nil) 23 26 (fontified nil face font-lock-comment-delimiter-face) 26 68 (fontified nil face font-lock-comment-face) 68 69 (fontified nil) 69 72 (fontified nil face font-lock-comment-delimiter-face) 72 133 (fontified nil face font-lock-comment-face) 133 134 (fontified nil) 134 137 (fontified nil face font-lock-comment-delimiter-face) 137 191 (fontified nil face font-lock-comment-face) 191 192 (fontified nil) 192 195 (fontified nil face font-lock-comment-delimiter-face) 195 245 (fontified nil face font-lock-comment-face) 245 247 (fontified nil) 247 248 (fontified nil face (rainbow-delimiters-depth-2-face)) 248 270 (fontified nil) 270 271 (fontified nil face (rainbow-delimiters-depth-3-face)) 271 337 (fontified nil face font-lock-string-face) 337 345 (fontified nil) 345 346 (fontified nil face (rainbow-delimiters-depth-3-face)) 346 347 (fontified nil face (rainbow-delimiters-depth-2-face)) 347 350 (fontified nil) 350 351 (fontified nil face (rainbow-delimiters-depth-2-face)) 351 381 (fontified nil) 381 382 (fontified nil face (rainbow-delimiters-depth-3-face)) 382 483 (fontified nil) 483 484 (fontified nil face (rainbow-delimiters-depth-3-face)) 484 485 (fontified nil face (rainbow-delimiters-depth-2-face)) 485 486 (fontified nil face (rainbow-delimiters-depth-1-face))) . -2390)) nil (25466 33343 537429 396000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2529 . 2530) (nil fontified nil 2353 . 2530) (2353 . 2530)) ((#("(set-variable 'load-path (append load-path (list nil (substitute-in-file-name \"$CM_UNIX_HOME/emacs\"))))
(load-library \"cm\")
(load-library \"cm-hide\")
 
(setq cm-ac-menu-lines 10)" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face)) 1 25 (fontified nil) 25 26 (fontified nil face (rainbow-delimiters-depth-2-face)) 26 43 (fontified nil) 43 44 (fontified nil face (rainbow-delimiters-depth-3-face)) 44 53 (fontified nil) 53 54 (fontified nil face (rainbow-delimiters-depth-4-face)) 54 78 (fontified nil) 78 99 (fontified nil face font-lock-string-face) 99 100 (fontified nil face (rainbow-delimiters-depth-4-face)) 100 101 (fontified nil face (rainbow-delimiters-depth-3-face)) 101 102 (fontified nil face (rainbow-delimiters-depth-2-face)) 102 103 (fontified nil face (rainbow-delimiters-depth-1-face)) 103 104 (fontified nil) 104 105 (fontified nil face (rainbow-delimiters-depth-1-face)) 105 118 (fontified nil) 118 122 (fontified nil face font-lock-string-face) 122 123 (fontified nil face (rainbow-delimiters-depth-1-face)) 123 124 (fontified nil) 124 125 (fontified nil face (rainbow-delimiters-depth-1-face)) 125 138 (fontified nil) 138 147 (fontified nil face font-lock-string-face) 147 148 (fontified nil face (rainbow-delimiters-depth-1-face)) 148 151 (fontified nil) 151 152 (fontified nil face (rainbow-delimiters-depth-1-face)) 152 156 (fontified nil face font-lock-keyword-face) 156 176 (fontified nil) 176 177 (fontified nil rear-nonsticky nil face (rainbow-delimiters-depth-1-face))) . 2353) (undo-tree-id0 . -151) (undo-tree-id1 . -149) (undo-tree-id2 . -149) (undo-tree-id3 . -149) (undo-tree-id4 . -149) (undo-tree-id5 . -149) (undo-tree-id6 . -149) (undo-tree-id7 . -149) (undo-tree-id8 . -149) (undo-tree-id9 . -149) (undo-tree-id10 . -149) (undo-tree-id11 . -149) (undo-tree-id12 . -149) (undo-tree-id13 . -149) (undo-tree-id14 . -149) (undo-tree-id15 . -149) (undo-tree-id16 . -149) (undo-tree-id17 . -149) (undo-tree-id18 . -149) (undo-tree-id19 . -149) (undo-tree-id20 . -149) (undo-tree-id21 . -149) (undo-tree-id22 . -149) (undo-tree-id23 . -149) (undo-tree-id24 . -149) (undo-tree-id25 . -149) (undo-tree-id26 . -149) (undo-tree-id27 . -149) (undo-tree-id28 . -149) (undo-tree-id29 . -149) (undo-tree-id30 . -149) (undo-tree-id31 . -149) (undo-tree-id32 . -149) (undo-tree-id33 . -149) (undo-tree-id34 . -124) (undo-tree-id35 . -124) (undo-tree-id36 . -124) (undo-tree-id37 . -124) (undo-tree-id38 . -124) (undo-tree-id39 . -124) (undo-tree-id40 . -124) (undo-tree-id41 . -124) (undo-tree-id42 . -124) (undo-tree-id43 . -124) (undo-tree-id44 . -124) (undo-tree-id45 . -124) (undo-tree-id46 . -124) (undo-tree-id47 . -124) (undo-tree-id48 . -124) (undo-tree-id49 . -149) (undo-tree-id50 . -149) (undo-tree-id51 . -149) (undo-tree-id52 . -149) (undo-tree-id53 . -149) (undo-tree-id54 . -149) (undo-tree-id55 . -149) (undo-tree-id56 . -149) (undo-tree-id57 . -149) (undo-tree-id58 . -149) (undo-tree-id59 . -149) (undo-tree-id60 . -149) (undo-tree-id61 . -149) (undo-tree-id62 . -149) (undo-tree-id63 . -149) (undo-tree-id64 . -151) (undo-tree-id65 . -151) (undo-tree-id66 . -151) (undo-tree-id67 . -151) (undo-tree-id68 . -151) (undo-tree-id69 . -151) (undo-tree-id70 . -151) (undo-tree-id71 . -151) (undo-tree-id72 . -151) (undo-tree-id73 . -151) (undo-tree-id74 . -151) (undo-tree-id75 . -151) (undo-tree-id76 . -151) (undo-tree-id77 . -151) (undo-tree-id78 . -151) (undo-tree-id79 . -151) (undo-tree-id80 . -151) (undo-tree-id81 . -151) (undo-tree-id82 . -151) (undo-tree-id83 . -151) (undo-tree-id84 . -151) (undo-tree-id85 . -151) (undo-tree-id86 . -151) (undo-tree-id87 . -151) (undo-tree-id88 . -151) (undo-tree-id89 . -151) (undo-tree-id90 . -151) (undo-tree-id91 . -151) (undo-tree-id92 . -151) (undo-tree-id93 . -151) (undo-tree-id94 . -151) (undo-tree-id95 . -151) (undo-tree-id96 . -151) (undo-tree-id97 . -151) (undo-tree-id98 . -151) (undo-tree-id99 . -151) (undo-tree-id100 . -151) (undo-tree-id101 . -151) (undo-tree-id102 . -151) (undo-tree-id103 . -151) (undo-tree-id104 . -151) (undo-tree-id105 . -151) (undo-tree-id106 . -151) (undo-tree-id107 . -151) (undo-tree-id108 . -151) (undo-tree-id109 . -151) (undo-tree-id110 . -151) (undo-tree-id111 . -151) (undo-tree-id112 . -149) (undo-tree-id113 . -149) (undo-tree-id114 . -149) (undo-tree-id115 . -149) (undo-tree-id116 . -149) (undo-tree-id117 . -149) (undo-tree-id118 . -149) (undo-tree-id119 . -149) (undo-tree-id120 . -149) (undo-tree-id121 . -149) (undo-tree-id122 . -149) (undo-tree-id123 . -149) (undo-tree-id124 . -149) (undo-tree-id125 . -149) (undo-tree-id126 . -149) (undo-tree-id127 . -124) (undo-tree-id128 . -124) (undo-tree-id129 . -124) (undo-tree-id130 . -124) (undo-tree-id131 . -124) (undo-tree-id132 . -124) (undo-tree-id133 . -124) (undo-tree-id134 . -124) (undo-tree-id135 . -124) (undo-tree-id136 . -124) (undo-tree-id137 . 177) (undo-tree-id138 . -1) (undo-tree-id139 . 75) (undo-tree-id140 . -103) (undo-tree-id141 . -124) (undo-tree-id142 . -124) (undo-tree-id143 . -124) (undo-tree-id144 . -124) (undo-tree-id145 . -124) (undo-tree-id146 . -104) (undo-tree-id147 . -104) (undo-tree-id148 . -104) (undo-tree-id149 . -104) (undo-tree-id150 . -104) (undo-tree-id151 . -104) (undo-tree-id152 . -104) (undo-tree-id153 . -104) (undo-tree-id154 . -104) (undo-tree-id155 . -104) (undo-tree-id156 . -104) (undo-tree-id157 . -104) (undo-tree-id158 . -104) (undo-tree-id159 . -104) (undo-tree-id160 . -104) (nil fontified t 2501 . 2504) (nil fontified t 2500 . 2501) (nil fontified t 2491 . 2500) (nil fontified t 2478 . 2491) (nil fontified t 2477 . 2478) (nil fontified t 2476 . 2477) (nil fontified t 2475 . 2476) (nil fontified t 2471 . 2475) (nil fontified t 2458 . 2471) (nil fontified t 2457 . 2458) (nil fontified t 2456 . 2457) (nil fontified t 2455 . 2456) (nil fontified t 2454 . 2455) (nil fontified t 2453 . 2454) (nil fontified t 2452 . 2453) (nil fontified t 2431 . 2452) (nil fontified t 2407 . 2431) (nil fontified t 2406 . 2407) (nil fontified t 2397 . 2406) (nil fontified t 2396 . 2397) (nil fontified t 2379 . 2396) (nil fontified t 2378 . 2379) (nil fontified t 2354 . 2378) (nil fontified t 2353 . 2354) (nil rear-nonsticky t 2529 . 2530) (t 25466 33160 208930 371000)) (25466 33160 199704 347000) 0 nil])
([nil nil ((599 . 600) (t 25466 33343 548368 539000) 557) nil (25466 33948 965619 303000) 0 nil])
nil
([nil nil ((600 . 601) 600) nil (25466 34112 728669 374000) 0 nil] [nil nil ((nil rear-nonsticky nil 761 . 762) (nil fontified nil 600 . 762) (600 . 762)) ((#("(use-package general
  :config
  (general-create-definer rune/leader-keys
    :keymaps '(normal insert visual emacs)
    :prefix \"SPC\"
    :global-prefix \"C-SPC\")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 12 (face font-lock-keyword-face fontified nil) 12 13 (fontified nil) 13 20 (face font-lock-constant-face fontified nil) 20 23 (fontified nil) 23 30 (face font-lock-builtin-face fontified nil) 30 33 (fontified nil) 33 34 (face (rainbow-delimiters-depth-2-face) fontified nil) 34 78 (fontified nil) 78 86 (face font-lock-builtin-face fontified nil) 86 88 (fontified nil) 88 89 (face (rainbow-delimiters-depth-3-face) fontified nil) 89 115 (fontified nil) 115 116 (face (rainbow-delimiters-depth-3-face) fontified nil) 116 121 (fontified nil) 121 128 (face font-lock-builtin-face fontified nil) 128 129 (fontified nil) 129 134 (face font-lock-string-face fontified nil) 134 135 (fontified nil) 135 139 (fontified nil) 139 153 (face font-lock-builtin-face fontified nil) 153 154 (fontified nil) 154 161 (face font-lock-string-face fontified nil) 161 162 (face (rainbow-delimiters-depth-2-face) rear-nonsticky nil fontified nil)) . 600) (undo-tree-id0 . -161) (undo-tree-id1 . -161) (undo-tree-id2 . -135) (undo-tree-id3 . 1) (undo-tree-id4 . -162) (undo-tree-id5 . 129) (undo-tree-id6 . -34) (undo-tree-id7 . -161) (nil fontified t 734 . 735) (nil fontified t 729 . 734) (nil fontified t 728 . 729) (nil fontified t 721 . 728) (nil fontified t 716 . 721) (nil fontified t 715 . 716) (nil fontified t 689 . 715) (nil fontified t 688 . 689) (nil fontified t 686 . 688) (nil fontified t 678 . 686) (nil fontified t 634 . 678) (nil fontified t 633 . 634) (nil fontified t 630 . 633) (nil fontified t 623 . 630) (nil fontified t 620 . 623) (nil fontified t 613 . 620) (nil fontified t 612 . 613) (nil fontified t 601 . 612) (nil fontified t 600 . 601) (nil rear-nonsticky t 761 . 762)) (25466 33948 965546 107000) 0 nil])
([nil nil ((nil rear-nonsticky nil 762 . 763) (nil fontified nil 601 . 763) (601 . 763)) nil (25466 34112 728668 304000) 0 nil])
nil
([nil nil ((#("  " 0 2 (fontified t)) . -764) (undo-tree-id14 . -2) 766 (763 . 766) 762) nil (25466 34112 728666 770000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -765) (undo-tree-id13 . -2) 767 (764 . 767) 764) nil (25466 34112 728664 265000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 764)) nil (25466 34112 728661 879000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 764) (undo-tree-id10 . 1) (undo-tree-id11 . -1) (undo-tree-id12 . 1)) nil (25466 34112 728660 502000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -765) (undo-tree-id9 . -2) 767 (764 . 767) 764) nil (25466 34112 728656 539000) 0 nil])
([nil nil ((nil rear-nonsticky nil 884 . 885) (nil fontified nil 764 . 885) (764 . 885)) nil (25466 34112 728652 653000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -764) (undo-tree-id8 . -2) 766 (764 . 766) (764 . 765) 782) nil (25466 34112 728647 538000) 0 nil])
([nil nil ((3182 . 3421) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face)) 1 19 (fontified nil) 19 22 (fontified nil face font-lock-comment-delimiter-face) 22 60 (fontified nil face font-lock-comment-face) 60 61 (fontified nil) 61 64 (fontified nil face font-lock-comment-delimiter-face) 64 125 (fontified nil face font-lock-comment-face) 125 126 (fontified nil) 126 129 (fontified nil face font-lock-comment-delimiter-face) 129 183 (fontified nil face font-lock-comment-face) 183 184 (fontified nil) 184 187 (fontified nil face font-lock-comment-delimiter-face) 187 237 (fontified nil face font-lock-comment-face) 237 238 (fontified nil) 238 239 (fontified nil face (rainbow-delimiters-depth-1-face))) . -3182) (3179 . 3181) (#("
" 0 1 (fontified nil)) . -3179) (3054 . 3180) (#(" " 0 1 (fontified nil)) . 3054) (3024 . 3055) (#("
" 0 1 (fontified nil)) . -3024) (2943 . 3025) (#(" " 0 1 (fontified nil)) . 2943) (2677 . 2944) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '(\"1a1ac598737d0fcdc4dfab3af3d6f46ab2d5048b8e72bc22f50271fd6d393a00\" default))
 '(package-selected-packages
   '(lsp-mode undo-tree auctex doom-themes doom-theme all-the-icons evil doom-modeline command-log-mode use-package)))" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face)) 1 23 (fontified nil) 23 26 (fontified nil face font-lock-comment-delimiter-face) 26 68 (fontified nil face font-lock-comment-face) 68 69 (fontified nil) 69 72 (fontified nil face font-lock-comment-delimiter-face) 72 133 (fontified nil face font-lock-comment-face) 133 134 (fontified nil) 134 137 (fontified nil face font-lock-comment-delimiter-face) 137 191 (fontified nil face font-lock-comment-face) 191 192 (fontified nil) 192 195 (fontified nil face font-lock-comment-delimiter-face) 195 245 (fontified nil face font-lock-comment-face) 245 247 (fontified nil) 247 248 (fontified nil face (rainbow-delimiters-depth-2-face)) 248 271 (fontified nil) 271 272 (fontified nil face (rainbow-delimiters-depth-3-face)) 272 338 (fontified nil face font-lock-string-face) 338 346 (fontified nil) 346 347 (fontified nil face (rainbow-delimiters-depth-3-face)) 347 348 (fontified nil face (rainbow-delimiters-depth-2-face)) 348 351 (fontified nil) 351 352 (fontified nil face (rainbow-delimiters-depth-2-face)) 352 382 (fontified nil) 382 383 (fontified nil face (rainbow-delimiters-depth-3-face)) 383 493 (fontified nil) 493 494 (fontified nil face (rainbow-delimiters-depth-3-face)) 494 495 (fontified nil face (rainbow-delimiters-depth-2-face)) 495 496 (fontified nil face (rainbow-delimiters-depth-1-face))) . -2677)) nil (25466 34119 152183 69000) 0 nil])
([nil nil ((909 . 911) (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -884) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -885) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . 1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) 886 (900 . 911) (#(" " 0 1 (fontified t)) . -900) (undo-tree-id9 . -1) 901 (896 . 901) (#("s" 0 1 (fontified t)) . -896) (undo-tree-id10 . -1) (#("u" 0 1 (fontified t)) . -897) (undo-tree-id11 . -1) 898 (890 . 898) (#(" " 0 1 (fontified t)) . -890) (undo-tree-id12 . -1) 891 (888 . 891) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -888) (undo-tree-id13 . -1) (#(" " 0 1 (fontified t)) . -889) (undo-tree-id14 . -1) 890 (887 . 890) (886 . 887) (t 25466 34119 162522 848000)) nil (25466 34213 132295 655000) 0 nil])
([nil nil (910) nil (25466 34215 717101 762000) 0 nil])
([nil nil ((885 . 889) (t 25466 34213 144170 209000)) nil (25466 34215 717096 780000) 0 nil])
([nil nil ((897 . 900) (#("o" 0 1 (fontified t)) . -897) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 898 (897 . 898) (#("n" 0 1 (fontified t)) . -897) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("u" 0 1 (fontified t)) . -898) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("s" 0 1 (fontified t)) . -899) (undo-tree-id37 . -1) 900 (t 25466 34215 727991 947000)) nil (25466 34228 439376 721000) 0 nil])
([nil nil ((930 . 936) (#("F" 0 1 (face font-lock-string-face fontified t)) . -930) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -931) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -932) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("k" 0 1 (face font-lock-string-face fontified t)) . -933) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -934) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) 935 (933 . 935) (932 . 933) (#("e" 0 1 (face font-lock-string-face fontified t)) . -932) (undo-tree-id215 . -1) 933 (930 . 933) (#("I" 0 1 (face font-lock-string-face fontified t)) . -930) (undo-tree-id216 . -1) 931 (929 . 931) (#("d" 0 1 (face font-lock-string-face fontified t)) . -929) (undo-tree-id217 . -1) 930 (926 . 930) (#("I" 0 1 (face font-lock-string-face fontified t)) . -926) (undo-tree-id218 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -927) (undo-tree-id219 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -928) (undo-tree-id220 . -1) 929 (925 . 929) (#("f" 0 1 (face font-lock-string-face fontified t)) . -925) (undo-tree-id221 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -926) (undo-tree-id222 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -927) (undo-tree-id223 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -928) (undo-tree-id224 . -1) 929 (912 . 929) (#(":" 0 1 (fontified t)) . -912) (undo-tree-id225 . -1) (#(" " 0 1 (fontified t)) . -913) (undo-tree-id226 . -1) 914 (912 . 914) (t 25466 34228 459110 987000)) nil (25466 34284 762761 354000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -942) (undo-tree-id240 . -1) 943 (941 . 943) (#("^" 0 1 (fontified t)) . -940) (undo-tree-id241 . -1) 941 (940 . 941) (940 . 942) (939 . 940) (t 25466 34284 777163 969000) 935) nil (25466 34331 817461 119000) 0 nil])
([nil nil ((980 . 990) (#("s" 0 1 (face font-lock-string-face fontified t)) . -980) (undo-tree-id227 . -1) 981 (972 . 981) (#("c" 0 1 (face font-lock-string-face fontified t)) . -972) (undo-tree-id228 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -973) (undo-tree-id229 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -974) (undo-tree-id230 . -1) 975 (970 . 975) (#("'" 0 1 (fontified t)) . -970) (undo-tree-id231 . -1) 971 (967 . 971) (958 . 967) (#("X" 0 1 (fontified t)) . -958) (undo-tree-id232 . -1) 959 (947 . 959) (#(" " 0 1 (fontified t)) . -947) (undo-tree-id233 . -1) 948 (945 . 948) (938 . 942) 941 (#(")" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . -937) (undo-tree-id234 . -1) (undo-tree-id235 . 1) (undo-tree-id236 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -938) (undo-tree-id237 . -1) (undo-tree-id238 . 1) (undo-tree-id239 . -1) 939) nil (25466 34331 817452 332000) 0 nil])
([nil nil ((2797 . 2804) (#("r" 0 1 (face font-lock-constant-face fontified t)) . -2797) (undo-tree-id242 . -1) (#("s" 0 1 (face font-lock-constant-face fontified t)) . -2798) (undo-tree-id243 . -1) 2799 (2788 . 2799) (#("a" 0 1 (fontified t)) . -2788) (undo-tree-id244 . -1) (#("k" 0 1 (fontified t)) . -2789) (undo-tree-id245 . -1) (#("g" 0 1 (fontified t)) . -2790) (undo-tree-id246 . -1) (#("e" 0 1 (fontified t)) . -2791) (undo-tree-id247 . -1) 2792 (2787 . 2792) (#("k" 0 1 (fontified t)) . -2787) (undo-tree-id248 . -1) (#("c" 0 1 (fontified t)) . -2788) (undo-tree-id249 . -1) (#("a" 0 1 (fontified t)) . -2789) (undo-tree-id250 . -1) 2790 (2780 . 2790) (2779 . 2780) (2778 . 2779) (t 25466 34331 828808 409000) 2777) nil (25466 34399 487242 288000) 0 nil])
([nil nil ((3323 . 3562) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 19 (fontified nil) 19 22 (face font-lock-comment-delimiter-face fontified nil) 22 60 (face font-lock-comment-face fontified nil) 60 61 (fontified nil) 61 64 (face font-lock-comment-delimiter-face fontified nil) 64 125 (face font-lock-comment-face fontified nil) 125 126 (fontified nil) 126 129 (face font-lock-comment-delimiter-face fontified nil) 129 183 (face font-lock-comment-face fontified nil) 183 184 (fontified nil) 184 187 (face font-lock-comment-delimiter-face fontified nil) 187 237 (face font-lock-comment-face fontified nil) 237 238 (fontified nil) 238 239 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3323) (3320 . 3322) (#("
" 0 1 (fontified nil)) . -3320) (3184 . 3321) (#(" " 0 1 (fontified nil)) . 3184) (3154 . 3185) (#("
" 0 1 (fontified nil)) . -3154) (3073 . 3155) (#(" " 0 1 (fontified nil)) . 3073) (2807 . 3074) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '(\"1a1ac598737d0fcdc4dfab3af3d6f46ab2d5048b8e72bc22f50271fd6d393a00\" default))
 '(package-selected-packages
   '(general lsp-mode undo-tree auctex doom-themes doom-theme all-the-icons evil doom-modeline command-log-mode use-package)))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 23 (fontified nil) 23 26 (face font-lock-comment-delimiter-face fontified nil) 26 68 (face font-lock-comment-face fontified nil) 68 69 (fontified nil) 69 72 (face font-lock-comment-delimiter-face fontified nil) 72 133 (face font-lock-comment-face fontified nil) 133 134 (fontified nil) 134 137 (face font-lock-comment-delimiter-face fontified nil) 137 191 (face font-lock-comment-face fontified nil) 191 192 (fontified nil) 192 195 (face font-lock-comment-delimiter-face fontified nil) 195 245 (face font-lock-comment-face fontified nil) 245 247 (fontified nil) 247 248 (face (rainbow-delimiters-depth-2-face) fontified nil) 248 271 (fontified nil) 271 272 (face (rainbow-delimiters-depth-3-face) fontified nil) 272 338 (face font-lock-string-face fontified nil) 338 339 (fontified nil) 339 346 (fontified nil) 346 347 (face (rainbow-delimiters-depth-3-face) fontified nil) 347 348 (face (rainbow-delimiters-depth-2-face) fontified nil) 348 349 (fontified nil) 349 351 (fontified nil) 351 352 (face (rainbow-delimiters-depth-2-face) fontified nil) 352 382 (fontified nil) 382 383 (face (rainbow-delimiters-depth-3-face) fontified nil) 383 501 (fontified nil) 501 502 (face (rainbow-delimiters-depth-3-face) fontified nil) 502 503 (face (rainbow-delimiters-depth-2-face) fontified nil) 503 504 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -2807)) nil (25466 34410 394265 147000) 0 nil])
([nil nil ((3323 . 3562) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )" 0 239 (fontified nil)) . -3323) (3320 . 3322) (#("
" 0 1 (fontified nil)) . -3320) (3184 . 3321) (#(" " 0 1 (fontified nil)) . 3184) (3154 . 3185) (#("
" 0 1 (fontified nil)) . -3154) (3073 . 3155) (#(" " 0 1 (fontified nil)) . 3073) (2807 . 3074) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '(\"1a1ac598737d0fcdc4dfab3af3d6f46ab2d5048b8e72bc22f50271fd6d393a00\" default))
 '(package-selected-packages
   '(treesitter general lsp-mode undo-tree auctex doom-themes doom-theme all-the-icons evil doom-modeline command-log-mode use-package)))" 0 515 (fontified nil)) . -2807) (t 25466 34410 406100 9000)) nil (25466 34442 153133 794000) 0 nil])
([nil nil ((#("(use-package treesitter)
" 0 1 (fontified t face (rainbow-delimiters-depth-1-face)) 1 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 23 (fontified t face font-lock-constant-face) 23 24 (fontified t face (rainbow-delimiters-depth-1-face)) 24 25 (fontified t)) . 2780) (undo-tree-id13 . -10) (undo-tree-id14 . -10) (undo-tree-id15 . -24) 2790 (t 25466 34442 176758 467000)) nil (25466 34588 720314 291000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2780)) nil (25466 34588 720309 391000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -1000) (undo-tree-id10 . -1) 1001 (999 . 1001) (995 . 999) (#("'" 0 1 (fontified t face font-lock-string-face)) . -995) (undo-tree-id11 . -1) 996 (994 . 996) (#("q" 0 1 (fontified t face font-lock-string-face)) . -994) (undo-tree-id12 . -1) 995 (993 . 995) (988 . 993)) nil (25466 34588 720307 814000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1002 . 1003) (#("
" 0 1 (fontified nil)) . -1003) (1002 . 1004) 999) nil (25466 34588 720302 529000) 0 nil])
([nil nil ((1031 . 1045) (#("s" 0 1 (fontified t face font-lock-string-face)) . -1031) (undo-tree-id0 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1032) (undo-tree-id1 . -1) 1033 (1025 . 1033) (#("_" 0 1 (fontified t face font-lock-builtin-face)) . -1025) (undo-tree-id2 . -1) (#("k" 0 1 (fontified t face font-lock-builtin-face)) . -1026) (undo-tree-id3 . -1) (#("e" 0 1 (fontified t face font-lock-builtin-face)) . -1027) (undo-tree-id4 . -1) 1028 (1025 . 1028) (1004 . 1025) (#("S" 0 1 (fontified t)) . -1004) (undo-tree-id5 . -1) (#("s" 0 1 (fontified t)) . -1005) (undo-tree-id6 . -1) 1006 (1005 . 1006) (#("a" 0 1 (fontified t)) . -1005) (undo-tree-id7 . -1) (#("v" 0 1 (fontified t)) . -1006) (undo-tree-id8 . -1) 1007 (999 . 1007) (#(" " 0 1 (fontified t)) . -999) (undo-tree-id9 . -1) 1000) nil (25466 34588 720298 476000) 0 nil])
([nil nil ((1045 . 1046)) nil (25466 34588 720276 19000) 0 nil])
([nil nil ((1045 . 1046)) nil (25466 34643 275674 17000) 0 nil])
([nil nil ((1149 . 1153) (1128 . 1149) (#("w" 0 1 (fontified t)) . -1128) (undo-tree-id3 . -1) (#("h" 0 1 (fontified t)) . -1129) (undo-tree-id4 . -1) 1130 (1127 . 1130) (1098 . 1103) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1098) (undo-tree-id5 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -1099) (undo-tree-id6 . -1) 1100 (1085 . 1100) (#("'" 0 1 (fontified t)) . -1085) (undo-tree-id7 . -1) (#("n" 0 1 (fontified t)) . -1086) (undo-tree-id8 . -1) (#("a" 0 1 (fontified t)) . -1087) (undo-tree-id9 . -1) 1088 (1085 . 1088) (#("n" 0 1 (fontified t)) . -1085) (undo-tree-id10 . -1) 1086 (1082 . 1086) (1073 . 1082) (1085 . 1097) (1080 . 1085) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1080) (undo-tree-id11 . -1) (#("v" 0 1 (fontified t face font-lock-string-face)) . -1081) (undo-tree-id12 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -1082) (undo-tree-id13 . -1) 1083 (1079 . 1083) (#("'" 0 1 (fontified t)) . -1079) (undo-tree-id14 . -1) 1080 (1079 . 1080) (1074 . 1079) (#("
" 0 1 (fontified t)) . -1074) (undo-tree-id15 . -1) (#(" " 0 1 (fontified t)) . -1075) (undo-tree-id16 . -1) (#(" " 0 1 (fontified t)) . -1076) (undo-tree-id17 . -1) (#(" " 0 1 (fontified t)) . -1077) (undo-tree-id18 . -1) (#(" " 0 1 (fontified t)) . -1078) (undo-tree-id19 . -1) 1079 (1074 . 1079) (1055 . 1074) (1052 . 1055) (1047 . 1052) (#("
" 0 1 (fontified t)) . -1047) (undo-tree-id20 . -1) (#("
" 0 1 (fontified t)) . -1048) (undo-tree-id21 . -1) (#(" " 0 1 (fontified t)) . -1049) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t)) . -1050) (undo-tree-id23 . -1) (#(" " 0 1 (fontified t)) . -1051) (undo-tree-id24 . -1) (#(" " 0 1 (fontified t)) . -1052) (undo-tree-id25 . -1) 1053 (1049 . 1053) (#("    " 0 4 (fontified nil)) . 1048) (undo-tree-id26 . -4) (1052 . 1053) (1047 . 1052) (t 25466 34588 730745 617000)) nil (25466 34715 326064 234000) 0 nil] [nil nil ((1049 . 1050) (t 25466 34588 730745 617000) 1013) ((#("
" 0 1 (fontified t)) . 1049) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1)) (25466 34643 275500 267000) 0 nil])
([nil nil ((1010 . 1022) (#("a" 0 1 (fontified t)) . -1010) (undo-tree-id47 . -1) (#("n" 0 1 (fontified t)) . -1011) (undo-tree-id48 . -1) 1012 (1007 . 1012) (#("f" 0 1 (fontified t)) . -1007) (undo-tree-id49 . -1) (#("E" 0 1 (fontified t)) . -1008) (undo-tree-id50 . -1) 1009 (999 . 1009) (#("e" 0 1 (fontified t)) . -999) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#("v" 0 1 (fontified t)) . -1000) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("i" 0 1 (fontified t)) . -1001) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("l" 0 1 (fontified t)) . -1002) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("-" 0 1 (fontified t)) . -1003) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("s" 0 1 (fontified t)) . -1004) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("a" 0 1 (fontified t)) . -1005) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("v" 0 1 (fontified t)) . -1006) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -1007) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("-" 0 1 (fontified t)) . -1008) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("a" 0 1 (fontified t face font-lock-keyword-face)) . -1009) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -1010) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("d" 0 1 (fontified t face font-lock-keyword-face)) . -1011) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#("-" 0 1 (fontified t)) . -1012) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("c" 0 1 (fontified t face font-lock-keyword-face)) . -1013) (undo-tree-id79 . -1) (#("l" 0 1 (fontified t face font-lock-keyword-face)) . -1014) (undo-tree-id80 . -1) (#("o" 0 1 (fontified t face font-lock-keyword-face)) . -1015) (undo-tree-id81 . -1) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . -1016) (undo-tree-id82 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -1017) (undo-tree-id83 . -1) 1018 (t 25466 34710 856349 362000)) nil (25466 34763 168346 558000) 0 nil] [nil nil ((1152 . 1166) (#(")))


(package" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 2 (fontified t face (rainbow-delimiters-depth-2-face)) 2 3 (fontified t face (rainbow-delimiters-depth-1-face)) 3 4 (fontified t) 4 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-1-face)) 7 14 (fontified t)) . 1152) (t 25466 34710 856349 362000)) ((1152 . 1166) (#(")))


(Package" 0 1 (fontified t face (rainbow-delimiters-depth-3-face)) 1 2 (fontified t face (rainbow-delimiters-depth-2-face)) 2 3 (fontified t face (rainbow-delimiters-depth-1-face)) 3 4 (fontified t) 4 6 (fontified t) 6 7 (fontified t face (rainbow-delimiters-depth-1-face)) 7 14 (fontified t)) . 1152) (undo-tree-id27 . 13) (undo-tree-id28 . -14) (undo-tree-id29 . -6) (undo-tree-id30 . -14)) (25466 34715 325934 508000) 0 nil])
nil
([nil nil ((1035 . 1036) (#("S" 0 1 (fontified t face font-lock-string-face)) . -1035) (undo-tree-id37 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1036) (undo-tree-id38 . -1) (#("v" 0 1 (fontified t face font-lock-string-face)) . -1037) (undo-tree-id39 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1038) (undo-tree-id40 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1039) (undo-tree-id41 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1040) (undo-tree-id42 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1041) (undo-tree-id43 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -1042) (undo-tree-id44 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1043) (undo-tree-id45 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -1044) (undo-tree-id46 . -1) 1045) nil (25466 34763 168307 658000) 0 nil])
nil
([nil nil ((1081 . 1083) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1081) (undo-tree-id31 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1082) (undo-tree-id32 . -1) (#("^" 0 1 (fontified t face font-lock-string-face)) . -1083) (undo-tree-id33 . -1) 1084 (1081 . 1084) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1081) (undo-tree-id34 . -1) (#("N" 0 1 (fontified t face font-lock-string-face)) . -1082) (undo-tree-id35 . -1) 1083 (1082 . 1083) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1082) (undo-tree-id36 . -1) 1083) nil (25466 34763 168292 849000) 0 nil])
([nil nil ((1048 . 1049) (#("b" 0 1 (fontified t face font-lock-string-face)) . -1048) (undo-tree-id93 . -1) 1049 (t 25466 34763 178274 462000)) nil (25466 34772 836861 315000) 0 nil])
([nil nil ((1105 . 1106) (#("b" 0 1 (fontified t face font-lock-string-face)) . -1105) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) 1106) nil (25466 34772 836856 581000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1021) (undo-tree-id145 . -1) 1022 (t 25466 34772 839519 172000)) nil (25466 34853 265861 132000) 0 nil])
([nil nil ((1105 . 1106) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1105) (undo-tree-id144 . -1) 1106) nil (25466 34853 265858 480000) 0 nil])
([nil nil ((1104 . 1105) (#("w" 0 1 (fontified t face font-lock-string-face)) . -1104) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("w" 0 1 (fontified t face font-lock-string-face)) . -1105) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) 1106) nil (25466 34853 265850 717000) 0 nil])
([nil nil ((2916 . 2923) (#("l" 0 1 (face font-lock-constant-face fontified t)) . -2916) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("s" 0 1 (face font-lock-constant-face fontified t)) . -2917) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (#("p" 0 1 (face font-lock-constant-face fontified t)) . -2918) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (#("-" 0 1 (face font-lock-constant-face fontified t)) . -2919) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (#("m" 0 1 (face font-lock-constant-face fontified t)) . -2920) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (#("o" 0 1 (face font-lock-constant-face fontified t)) . -2921) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (#("d" 0 1 (face font-lock-constant-face fontified t)) . -2922) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -2923) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) 2924 (t 25466 34853 277199 191000)) nil (25466 36609 204616 476000) 0 nil])
([nil nil ((3463 . 3702) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 19 (fontified nil) 19 22 (face font-lock-comment-delimiter-face fontified nil) 22 60 (face font-lock-comment-face fontified nil) 60 61 (fontified nil) 61 64 (face font-lock-comment-delimiter-face fontified nil) 64 125 (face font-lock-comment-face fontified nil) 125 126 (fontified nil) 126 129 (face font-lock-comment-delimiter-face fontified nil) 129 183 (face font-lock-comment-face fontified nil) 183 184 (fontified nil) 184 187 (face font-lock-comment-delimiter-face fontified nil) 187 237 (face font-lock-comment-face fontified nil) 237 238 (fontified nil) 238 239 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3463) (3460 . 3462) (#("
" 0 1 (fontified nil)) . -3460) (3316 . 3461) (#(" " 0 1 (fontified nil)) . 3316) (3286 . 3317) (#("
" 0 1 (fontified nil)) . -3286) (3205 . 3287) (#(" " 0 1 (fontified nil)) . 3205) (2939 . 3206) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '(\"1a1ac598737d0fcdc4dfab3af3d6f46ab2d5048b8e72bc22f50271fd6d393a00\" default))
 '(package-selected-packages
   '(treesitter general lsp-mode undo-tree auctex doom-themes doom-theme all-the-icons evil doom-modeline command-log-mode use-package)))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 23 (fontified nil) 23 26 (face font-lock-comment-delimiter-face fontified nil) 26 63 (face font-lock-comment-face fontified nil) 63 68 (face font-lock-comment-face fontified nil) 68 69 (fontified nil) 69 72 (face font-lock-comment-delimiter-face fontified nil) 72 133 (face font-lock-comment-face fontified nil) 133 134 (fontified nil) 134 137 (face font-lock-comment-delimiter-face fontified nil) 137 191 (face font-lock-comment-face fontified nil) 191 192 (fontified nil) 192 195 (face font-lock-comment-delimiter-face fontified nil) 195 245 (face font-lock-comment-face fontified nil) 245 247 (fontified nil) 247 248 (face (rainbow-delimiters-depth-2-face) fontified nil) 248 271 (fontified nil) 271 272 (face (rainbow-delimiters-depth-3-face) fontified nil) 272 338 (face font-lock-string-face fontified nil) 338 346 (fontified nil) 346 347 (face (rainbow-delimiters-depth-3-face) fontified nil) 347 348 (face (rainbow-delimiters-depth-2-face) fontified nil) 348 351 (fontified nil) 351 352 (face (rainbow-delimiters-depth-2-face) fontified nil) 352 382 (fontified nil) 382 383 (face (rainbow-delimiters-depth-3-face) fontified nil) 383 512 (fontified nil) 512 513 (face (rainbow-delimiters-depth-3-face) fontified nil) 513 514 (face (rainbow-delimiters-depth-2-face) fontified nil) 514 515 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -2939) 2922) nil (25466 36614 26048 726000) 0 nil])
([nil nil ((2936 . 2937) (t . 0) 2935) nil (25466 36717 71604 707000) 0 nil])
([nil nil ((2937 . 2938) 2937) nil (25466 36717 71602 888000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3377 . 3378) (nil fontified nil 2938 . 3378) (2938 . 3378)) nil (25466 36717 71598 290000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-comment-face fontified t)) . -3378) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . 1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) 3379 (3378 . 3379) (t 25466 36717 83921 421000)) nil (25466 36742 483305 246000) 0 nil])
([nil nil ((3288 . 3289)) nil (25466 36742 483270 443000) 0 nil])
([nil nil ((#("(consult-customize
 consult-ripgrep consult-git-grep consult-grep
 consult-bookmark consult-recent-file consult-xref
 consult--source-bookmark consult--source-file-register
 consult--source-recent-file consult--source-project-recent-file
 ;; my/command-wrapping-consult    ;; disable auto previews inside my command
 :preview-key '(:debounce 0.4 any)) ;; Option 1: Delay preview
 ;; :preview-key (kbd \"M-.\"))      ;; Option 2: Manual preview
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 18 (face font-lock-keyword-face fontified t) 18 239 (fontified t) 239 242 (face font-lock-comment-delimiter-face fontified t) 242 316 (face font-lock-comment-face fontified t) 316 317 (fontified t) 317 329 (face font-lock-builtin-face fontified t) 329 331 (fontified t) 331 332 (face (rainbow-delimiters-depth-2-face) fontified t) 332 341 (face font-lock-builtin-face fontified t) 341 349 (fontified t) 349 350 (face (rainbow-delimiters-depth-2-face) fontified t) 350 351 (face (rainbow-delimiters-depth-1-face) fontified t) 351 352 (fontified t) 352 355 (face font-lock-comment-delimiter-face fontified t) 355 379 (face font-lock-comment-face fontified t) 379 380 (fontified t) 380 383 (face font-lock-comment-delimiter-face fontified t) 383 440 (face font-lock-comment-face fontified t) 440 441 (face font-lock-comment-face fontified t rear-nonsticky t) 441 442 (face font-lock-comment-face fontified t)) . 2938) (undo-tree-id504 . -413) (undo-tree-id505 . -413) (undo-tree-id506 . -18) (undo-tree-id507 . 91) (undo-tree-id508 . -441) (undo-tree-id509 . -379) (undo-tree-id510 . -350) (undo-tree-id511 . -18) (undo-tree-id512 . -18) (undo-tree-id513 . -413) 2956 (t 25466 36742 494467 104000)) nil (25466 36852 712244 383000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2938) (undo-tree-id502 . 1) (undo-tree-id503 . 1)) nil (25466 36852 712234 533000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2938) (undo-tree-id500 . 1) (undo-tree-id501 . 1)) nil (25466 36852 712231 481000) 0 nil])
([nil nil ((2937 . 2938) 2937) nil (25466 36852 712228 259000) 0 nil])
([nil nil ((2938 . 2939) 2938) nil (25466 36852 712226 545000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3028 . 3029) (nil fontified nil 2938 . 3029) (2938 . 3029)) nil (25466 36852 712224 828000) 0 nil])
([nil nil (2963) nil (25466 36852 712293 240000) 0 nil])
([nil nil ((#("straight" 0 8 (fontified t)) . 2939) (undo-tree-id548 . 8) (undo-tree-id549 . -7) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -8) (undo-tree-id567 . -8) (undo-tree-id568 . -8) (undo-tree-id569 . -8) (undo-tree-id570 . -8) (undo-tree-id571 . -8) (undo-tree-id572 . -8) (undo-tree-id573 . -8) (undo-tree-id574 . -8) (undo-tree-id575 . -8) (undo-tree-id576 . -8) (undo-tree-id577 . -8) (undo-tree-id578 . -8) (undo-tree-id579 . -8) (undo-tree-id580 . -8) (undo-tree-id581 . -8) (undo-tree-id582 . -8) (undo-tree-id583 . -8) (undo-tree-id584 . -8) (undo-tree-id585 . -8) (undo-tree-id586 . -8) (undo-tree-id587 . -8) (undo-tree-id588 . -8) (undo-tree-id589 . -8) (undo-tree-id590 . -8) (undo-tree-id591 . -8) (undo-tree-id592 . -8)) nil (25466 36865 462379 173000) 0 nil] [nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 2938) (undo-tree-id499 . -1) 2939) ((2938 . 2939)) (25466 36852 712218 704000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 2939) (undo-tree-id545 . 1) (undo-tree-id546 . -1) (undo-tree-id547 . -1)) nil (25466 36865 462347 166000) 0 nil])
nil
([nil nil ((#("'" 0 1 (fontified t)) . -2951) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) 2952) nil (25466 36865 462339 749000) 0 nil])
([nil nil ((3557 . 3796) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 19 (fontified nil) 19 22 (face font-lock-comment-delimiter-face fontified nil) 22 60 (face font-lock-comment-face fontified nil) 60 61 (fontified nil) 61 64 (face font-lock-comment-delimiter-face fontified nil) 64 125 (face font-lock-comment-face fontified nil) 125 126 (fontified nil) 126 129 (face font-lock-comment-delimiter-face fontified nil) 129 183 (face font-lock-comment-face fontified nil) 183 184 (fontified nil) 184 187 (face font-lock-comment-delimiter-face fontified nil) 187 237 (face font-lock-comment-face fontified nil) 237 238 (fontified nil) 238 239 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3557) (3554 . 3556) (#("
" 0 1 (fontified nil)) . -3554) (3398 . 3555) (#(" " 0 1 (fontified nil)) . 3398) (3368 . 3399) (#("
" 0 1 (fontified nil)) . -3368) (3287 . 3369) (#(" " 0 1 (fontified nil)) . 3287) (3021 . 3288) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '(\"1a1ac598737d0fcdc4dfab3af3d6f46ab2d5048b8e72bc22f50271fd6d393a00\" default))
 '(package-selected-packages
   '(consult treesitter general lsp-mode undo-tree auctex doom-themes doom-theme all-the-icons evil doom-modeline command-log-mode use-package)))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 21 (fontified nil) 21 22 (fontified nil) 22 23 (fontified nil) 23 26 (face font-lock-comment-delimiter-face fontified nil) 26 68 (face font-lock-comment-face fontified nil) 68 69 (fontified nil) 69 72 (face font-lock-comment-delimiter-face fontified nil) 72 133 (face font-lock-comment-face fontified nil) 133 134 (fontified nil) 134 137 (face font-lock-comment-delimiter-face fontified nil) 137 191 (face font-lock-comment-face fontified nil) 191 192 (fontified nil) 192 195 (face font-lock-comment-delimiter-face fontified nil) 195 245 (face font-lock-comment-face fontified nil) 245 247 (fontified nil) 247 248 (face (rainbow-delimiters-depth-2-face) fontified nil) 248 270 (fontified nil) 270 271 (fontified nil) 271 272 (face (rainbow-delimiters-depth-3-face) fontified nil) 272 338 (face font-lock-string-face fontified nil) 338 346 (fontified nil) 346 347 (face (rainbow-delimiters-depth-3-face) fontified nil) 347 348 (face (rainbow-delimiters-depth-2-face) fontified nil) 348 349 (fontified nil) 349 351 (fontified nil) 351 352 (face (rainbow-delimiters-depth-2-face) fontified nil) 352 381 (fontified nil) 381 382 (fontified nil) 382 383 (face (rainbow-delimiters-depth-3-face) fontified nil) 383 520 (fontified nil) 520 521 (face (rainbow-delimiters-depth-3-face) fontified nil) 521 522 (face (rainbow-delimiters-depth-2-face) fontified nil) 522 523 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3021) (undo-tree-id593 . 523) 3004) nil (25466 36870 670644 721000) 0 nil])
([nil nil ((3038 . 3046) (#("h" 0 1 (face font-lock-constant-face fontified t)) . -3038) (undo-tree-id594 . -1) (#("u" 0 1 (face font-lock-constant-face fontified t)) . -3039) (undo-tree-id595 . -1) 3040 (3038 . 3040) (#("g" 0 1 (face font-lock-constant-face fontified t)) . -3038) (undo-tree-id596 . -1) 3039 (3028 . 3039) (#("c" 0 1 (fontified t)) . -3028) (undo-tree-id597 . -1) (#("k" 0 1 (fontified t)) . -3029) (undo-tree-id598 . -1) 3030 (3022 . 3030) (3021 . 3023) (#("(" 0 1 (fontified nil)) . -3021) (3021 . 3022) (3020 . 3021) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3020) (undo-tree-id599 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3021) (undo-tree-id600 . -1) (undo-tree-id601 . 1) (undo-tree-id602 . -1) (#(" " 0 1 (fontified t)) . -3022) (undo-tree-id603 . -1) 3023 (3022 . 3023) (3020 . 3022) (#("(" 0 1 (fontified nil)) . -3020) (3020 . 3021) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3020) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . 1) (undo-tree-id607 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3021) (undo-tree-id608 . -1) (undo-tree-id609 . 1) (undo-tree-id610 . -1) (#(" " 0 1 (fontified t)) . -3022) (undo-tree-id611 . -1) 3023 (3022 . 3023) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 3022) (3021 . 3022) (3020 . 3022) (#("(" 0 1 (fontified nil)) . -3020) (3020 . 3021) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3020) (undo-tree-id612 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3021) (undo-tree-id613 . -1) (undo-tree-id614 . 1) (undo-tree-id615 . -1) 3022 (#(" " 0 1 (fontified t)) . -3022) (undo-tree-id616 . -1) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . -3023) (undo-tree-id617 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 3024) (3023 . 3025) (#("\"" 0 1 (fontified nil)) . -3023) (3022 . 3024) (3020 . 3022) (#("(" 0 1 (fontified nil)) . -3020) (3020 . 3021) (3019 . 3020) (t . 0) 3004) nil (25466 37036 405973 668000) 0 nil])
([nil nil ((3047 . 3048) 3045) nil (25466 37036 405942 64000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3099 . 3100) (nil fontified nil 3048 . 3100) (3048 . 3100)) nil (25466 37036 405937 249000) 0 nil])
([nil nil (3099) nil (25466 37045 906143 462000) 0 nil])
([nil nil (3048) nil (25466 37045 906142 462000) 0 nil])
([nil nil (3048) nil (25466 37045 906141 484000) 0 nil])
([nil nil (3048) nil (25466 37045 906140 140000) 0 nil])
([nil nil ((3048 . 3050) (#(":" 0 1 (fontified t)) . -3048) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (#(":" 0 1 (face font-lock-builtin-face fontified t)) . -3049) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) 3050 (3048 . 3050) (t 25466 37036 438019 528000)) nil (25466 37046 403919 509000) 0 nil])
([nil nil ((3049 . 3068) (#("T" 0 1 (fontified t)) . -3049) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (#("a" 0 1 (fontified t)) . -3050) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (#("b" 0 1 (fontified t)) . -3051) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) 3052 (3049 . 3052) (3048 . 3050) (#("(" 0 1 (fontified nil)) . -3048) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (3048 . 3049) (3048 . 3049) 3049) nil (25466 37057 277931 232000) 0 nil] [nil nil ((nil rear-nonsticky nil 3101 . 3102) (nil fontified nil 3050 . 3102) (3050 . 3102) 3049) ((#("(setq yas-fallback-behavior '(apply tab-jump-out 1))" 0 51 (face font-lock-comment-face fontified nil) 51 52 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 3050) (undo-tree-id678 . -51) (undo-tree-id679 . -51) (undo-tree-id680 . -51) (undo-tree-id681 . -51) (undo-tree-id682 . -51) (undo-tree-id683 . -51) (undo-tree-id684 . -51) (undo-tree-id685 . -51) (undo-tree-id686 . 1) (undo-tree-id687 . -52) (undo-tree-id688 . 52) (undo-tree-id689 . -1) (undo-tree-id690 . -51) (undo-tree-id691 . -51) (undo-tree-id692 . -51) (undo-tree-id693 . -51) (undo-tree-id694 . -51) (undo-tree-id695 . -51) (undo-tree-id696 . -51) (undo-tree-id697 . -51) (undo-tree-id698 . -51) (undo-tree-id699 . -51) (undo-tree-id700 . -51) (nil rear-nonsticky t 3101 . 3102)) (25466 37045 906201 448000) 0 nil])
([nil nil ((3675 . 3914) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 19 (fontified nil) 19 22 (face font-lock-comment-delimiter-face fontified nil) 22 60 (face font-lock-comment-face fontified nil) 60 61 (fontified nil) 61 64 (face font-lock-comment-delimiter-face fontified nil) 64 125 (face font-lock-comment-face fontified nil) 125 126 (fontified nil) 126 129 (face font-lock-comment-delimiter-face fontified nil) 129 183 (face font-lock-comment-face fontified nil) 183 184 (fontified nil) 184 187 (face font-lock-comment-delimiter-face fontified nil) 187 237 (face font-lock-comment-face fontified nil) 237 238 (fontified nil) 238 239 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3675) (3672 . 3674) (#("
" 0 1 (fontified nil)) . -3672) (3503 . 3673) (#(" " 0 1 (fontified nil)) . 3503) (3473 . 3504) (#("
" 0 1 (fontified nil)) . -3473) (3392 . 3474) (#(" " 0 1 (fontified nil)) . 3392) (3126 . 3393) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '(\"1a1ac598737d0fcdc4dfab3af3d6f46ab2d5048b8e72bc22f50271fd6d393a00\" default))
 '(package-selected-packages
   '(smartparens consult treesitter general lsp-mode undo-tree auctex doom-themes doom-theme all-the-icons evil doom-modeline command-log-mode use-package)))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 23 (fontified nil) 23 26 (face font-lock-comment-delimiter-face fontified nil) 26 68 (face font-lock-comment-face fontified nil) 68 69 (fontified nil) 69 72 (face font-lock-comment-delimiter-face fontified nil) 72 133 (face font-lock-comment-face fontified nil) 133 134 (fontified nil) 134 137 (face font-lock-comment-delimiter-face fontified nil) 137 191 (face font-lock-comment-face fontified nil) 191 192 (fontified nil) 192 195 (face font-lock-comment-delimiter-face fontified nil) 195 245 (face font-lock-comment-face fontified nil) 245 247 (fontified nil) 247 248 (face (rainbow-delimiters-depth-2-face) fontified nil) 248 270 (fontified nil) 270 271 (fontified nil) 271 272 (face (rainbow-delimiters-depth-3-face) fontified nil) 272 338 (face font-lock-string-face fontified nil) 338 346 (fontified nil) 346 347 (face (rainbow-delimiters-depth-3-face) fontified nil) 347 348 (face (rainbow-delimiters-depth-2-face) fontified nil) 348 349 (fontified nil) 349 351 (fontified nil) 351 352 (face (rainbow-delimiters-depth-2-face) fontified nil) 352 381 (fontified nil) 381 382 (fontified nil) 382 383 (face (rainbow-delimiters-depth-3-face) fontified nil) 383 532 (fontified nil) 532 533 (face (rainbow-delimiters-depth-3-face) fontified nil) 533 534 (face (rainbow-delimiters-depth-2-face) fontified nil) 534 535 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3126) 3067) nil (25466 37059 468027 100000) 0 nil])
([nil nil ((3048 . 3049) 3101) ((#("
" 0 1 (fontified t)) . 3048) (undo-tree-id677 . 1)) (25466 37045 906086 998000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3066) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (#("1" 0 1 (fontified t)) . -3067) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) 3068 (t . 0)) nil (25466 37067 396098 15000) 0 nil])
nil
([nil nil ((#("(tab-jump-out mode)
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 18 (fontified t) 18 19 (face (rainbow-delimiters-depth-1-face) fontified t) 19 20 (fontified t)) . 3048) (undo-tree-id892 . -18) (undo-tree-id893 . 2) (undo-tree-id894 . -19) (undo-tree-id895 . -17) (undo-tree-id896 . -17) (undo-tree-id897 . -18) (undo-tree-id898 . -18) (undo-tree-id899 . -18) (undo-tree-id900 . -18) (undo-tree-id901 . -18) (undo-tree-id902 . -18) (undo-tree-id903 . -18) (undo-tree-id904 . -18) (undo-tree-id905 . -18) (undo-tree-id906 . -18) (undo-tree-id907 . -18) (undo-tree-id908 . -18) (undo-tree-id909 . -18) (undo-tree-id910 . -18) (undo-tree-id911 . -18) (undo-tree-id912 . -18) (undo-tree-id913 . -18) (undo-tree-id914 . -18) (undo-tree-id915 . -18) (undo-tree-id916 . -18) (undo-tree-id917 . -18) (undo-tree-id918 . -18) (undo-tree-id919 . -18) (undo-tree-id920 . -18) (undo-tree-id921 . -18) (undo-tree-id922 . -18) (undo-tree-id923 . -18) (undo-tree-id924 . -18) (undo-tree-id925 . -18) (undo-tree-id926 . -18) (undo-tree-id927 . -18) (undo-tree-id928 . -18) (undo-tree-id929 . -18) (undo-tree-id930 . -18) (undo-tree-id931 . -18) (undo-tree-id932 . -18) (undo-tree-id933 . -18) (undo-tree-id934 . -18) (undo-tree-id935 . -18) (undo-tree-id936 . -18) (undo-tree-id937 . -18) (undo-tree-id938 . -17) (undo-tree-id939 . -17) (undo-tree-id940 . -17) (undo-tree-id941 . -17) (undo-tree-id942 . -17) (undo-tree-id943 . -17) (undo-tree-id944 . -17) (undo-tree-id945 . -17) (undo-tree-id946 . -17) (undo-tree-id947 . -17) (undo-tree-id948 . -17) (undo-tree-id949 . -17) (undo-tree-id950 . -17) (undo-tree-id951 . -17) (undo-tree-id952 . -17) (undo-tree-id953 . -17) (undo-tree-id954 . -17) (undo-tree-id955 . -17) (undo-tree-id956 . -17) (undo-tree-id957 . -17) (undo-tree-id958 . -17) (undo-tree-id959 . -17) (undo-tree-id960 . -17) (undo-tree-id961 . -17) (undo-tree-id962 . -17) (undo-tree-id963 . -17) (undo-tree-id964 . -17) (undo-tree-id965 . -17) (undo-tree-id966 . -17) (undo-tree-id967 . -17) (undo-tree-id968 . -17) (undo-tree-id969 . -17) (undo-tree-id970 . -17) (undo-tree-id971 . -17) (undo-tree-id972 . -17) (undo-tree-id973 . -17) (undo-tree-id974 . -17) (undo-tree-id975 . -17) (undo-tree-id976 . -17) (undo-tree-id977 . -20) 3065 (t 25466 37067 408127 933000)) nil (25466 37092 718685 829000) 0 nil])
([nil nil ((3020 . 3022) (#("(" 0 1 (fontified nil)) . -3020) (3020 . 3021) (t 25466 37092 730575 330000)) nil (25466 37105 867559 197000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3020) (undo-tree-id982 . 1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3020) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . 1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3021) (undo-tree-id1013 . 1) (undo-tree-id1014 . 1) (undo-tree-id1015 . -1)) nil (25466 37105 867556 18000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 3047) (undo-tree-id980 . -1) (undo-tree-id981 . -1)) nil (25466 37105 867532 773000) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 3047) (undo-tree-id978 . -1) (undo-tree-id979 . -1)) nil (25466 37105 867527 653000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3099) (undo-tree-id1139 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3100) (undo-tree-id1140 . -1) 3101 (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 3101) (3100 . 3102) (#("(" 0 1 (fontified nil)) . -3100) (3100 . 3101) (3099 . 3100) (t 25466 37105 893766 242000) 3047) nil (25466 37165 882069 772000) 0 nil])
([nil nil ((3046 . 3047) 3045) nil (25466 37165 882018 543000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3065 . 3066) (nil fontified nil 3047 . 3066) (3047 . 3066)) nil (25466 37177 220296 715000) 0 nil])
([nil nil (3085) nil (25466 37180 270750 155000) 0 nil] [nil nil ((#("(setq yas-fallback-behavior '(apply tab-jump-out 1))
" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 29 (fontified t) 29 30 (face (rainbow-delimiters-depth-2-face) fontified t) 30 50 (fontified t) 50 51 (face (rainbow-delimiters-depth-2-face) fontified t) 51 52 (face (rainbow-delimiters-depth-1-face) fontified t rear-nonsticky t) 52 53 (fontified t)) . 3067) (undo-tree-id1016 . -52) (undo-tree-id1017 . -18) (undo-tree-id1019 . -52) (undo-tree-id1021 . -51) (undo-tree-id1023 . -51) (undo-tree-id1025 . -51) (undo-tree-id1027 . -51) (undo-tree-id1029 . -51) (undo-tree-id1031 . -51) (undo-tree-id1033 . -51) (undo-tree-id1035 . -51) (undo-tree-id1037 . -51) (undo-tree-id1039 . -51) (undo-tree-id1041 . -51) (undo-tree-id1043 . -51) (undo-tree-id1045 . -51) (undo-tree-id1047 . -51) (undo-tree-id1049 . -51) (undo-tree-id1051 . -51) (undo-tree-id1053 . -51) (undo-tree-id1055 . -51) (undo-tree-id1057 . -51) (undo-tree-id1059 . -51) (undo-tree-id1061 . -51) (undo-tree-id1063 . -51) (undo-tree-id1065 . -51) (undo-tree-id1067 . -51) (undo-tree-id1069 . -51) (undo-tree-id1071 . -51) (undo-tree-id1073 . -51) (undo-tree-id1075 . -51) (undo-tree-id1077 . -51) (undo-tree-id1079 . -51) (undo-tree-id1081 . -51) (undo-tree-id1083 . -51) (undo-tree-id1085 . -51) (undo-tree-id1087 . -51) (undo-tree-id1089 . -51) (undo-tree-id1091 . -51) (undo-tree-id1093 . -51) (undo-tree-id1095 . -51) (undo-tree-id1097 . -51) (undo-tree-id1099 . -51) (undo-tree-id1101 . -51) (undo-tree-id1103 . -51) (undo-tree-id1105 . -51) (undo-tree-id1107 . -51) (undo-tree-id1109 . -18) (undo-tree-id1111 . -18) (undo-tree-id1113 . -18) (undo-tree-id1115 . -18) (undo-tree-id1117 . -18) (undo-tree-id1119 . -18) (undo-tree-id1121 . -18) (undo-tree-id1123 . -18) (undo-tree-id1125 . -18) (undo-tree-id1127 . -18) (undo-tree-id1129 . -18) (undo-tree-id1131 . -18) (undo-tree-id1133 . -18) (undo-tree-id1135 . -18) (undo-tree-id1137 . -18) 3085) ((3067 . 3120) (t 25466 37165 894061 801000)) (25466 37176 609870 502000) 0 nil])
([nil nil ((3067 . 3069)) nil (25466 37180 270745 754000) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3067) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3068) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . 1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) 3069 (3067 . 3069) (#("(" 0 1 (fontified nil)) . -3067) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (3067 . 3068) (3066 . 3067) (t 25466 37165 894061 801000) 3047) ((#("
" 0 1 (fontified t)) . 3066) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (#("(" 0 1 (fontified nil)) . 3067) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (3067 . 3068) (#("()" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 2 (face (rainbow-delimiters-depth-1-face) fontified nil)) . 3067) (undo-tree-id1284 . -2) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -2) (undo-tree-id1303 . -2) (undo-tree-id1304 . -2) (undo-tree-id1305 . -2) (undo-tree-id1306 . -2) (undo-tree-id1307 . -2) (undo-tree-id1308 . -2) (undo-tree-id1309 . -2) (undo-tree-id1310 . -2) (undo-tree-id1311 . -2) (undo-tree-id1312 . -2) (undo-tree-id1313 . -2) (undo-tree-id1314 . -2) (undo-tree-id1315 . -2) (undo-tree-id1316 . -2) (undo-tree-id1317 . -2) (undo-tree-id1318 . -2) (undo-tree-id1319 . -2) (undo-tree-id1320 . -2) (undo-tree-id1321 . -2) (undo-tree-id1322 . -2) (undo-tree-id1323 . -1) (undo-tree-id1324 . -2) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (3067 . 3069)) (25466 37176 609531 477000) 0 nil])
([nil nil ((3121 . 3122) (t 25466 37180 283169 624000) 3068) nil (25466 37295 441000 684000) 0 nil])
nil
([nil nil ((3122 . 3123) 3122) nil (25466 37295 440998 871000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3278 . 3279) (nil fontified nil 3123 . 3279) (3123 . 3279)) nil (25466 37295 440997 555000) 0 nil])
([nil nil ((3207 . 3208) (#("<" 0 1 (face font-lock-string-face fontified t)) . -3207) (undo-tree-id1745 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -3208) (undo-tree-id1746 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -3209) (undo-tree-id1747 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -3210) (undo-tree-id1748 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -3211) (undo-tree-id1749 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -3212) (undo-tree-id1750 . -1) (#(">" 0 1 (face font-lock-string-face fontified t)) . -3213) (undo-tree-id1751 . -1) 3214) nil (25466 37295 440994 902000) 0 nil])
([nil nil ((3207 . 3208) (#("L" 0 1 (face font-lock-string-face fontified t)) . -3207) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) 3208 (3241 . 3242) (#("<" 0 1 (face font-lock-string-face fontified t)) . -3241) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -3242) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -3243) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (#("x" 0 1 (face font-lock-string-face fontified t)) . -3244) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -3245) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (#(">" 0 1 (face font-lock-string-face fontified t)) . -3246) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) 3247) nil (25466 37295 440971 49000) 0 nil])
([nil nil ((3832 . 4071) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 19 (fontified nil) 19 22 (face font-lock-comment-delimiter-face fontified nil) 22 60 (face font-lock-comment-face fontified nil) 60 61 (fontified nil) 61 64 (face font-lock-comment-delimiter-face fontified nil) 64 98 (face font-lock-comment-face fontified nil) 98 125 (face font-lock-comment-face fontified nil) 125 126 (fontified nil) 126 129 (face font-lock-comment-delimiter-face fontified nil) 129 183 (face font-lock-comment-face fontified nil) 183 184 (fontified nil) 184 187 (face font-lock-comment-delimiter-face fontified nil) 187 237 (face font-lock-comment-face fontified nil) 237 238 (fontified nil) 238 239 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3832) (3829 . 3831) (#("
" 0 1 (fontified nil)) . -3829) (3647 . 3830) (#(" " 0 1 (fontified nil)) . 3647) (3617 . 3648) (#("
" 0 1 (fontified nil)) . -3617) (3536 . 3618) (#(" " 0 1 (fontified nil)) . 3536) (3270 . 3537) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '(\"1a1ac598737d0fcdc4dfab3af3d6f46ab2d5048b8e72bc22f50271fd6d393a00\" default))
 '(package-selected-packages
   '(tab-jump-out smartparens consult treesitter general lsp-mode undo-tree auctex doom-themes doom-theme all-the-icons evil doom-modeline command-log-mode use-package)))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 23 (fontified nil) 23 26 (face font-lock-comment-delimiter-face fontified nil) 26 68 (face font-lock-comment-face fontified nil) 68 69 (fontified nil) 69 72 (face font-lock-comment-delimiter-face fontified nil) 72 133 (face font-lock-comment-face fontified nil) 133 134 (fontified nil) 134 137 (face font-lock-comment-delimiter-face fontified nil) 137 191 (face font-lock-comment-face fontified nil) 191 192 (fontified nil) 192 195 (face font-lock-comment-delimiter-face fontified nil) 195 245 (face font-lock-comment-face fontified nil) 245 247 (fontified nil) 247 248 (face (rainbow-delimiters-depth-2-face) fontified nil) 248 270 (fontified nil) 270 271 (fontified nil) 271 272 (face (rainbow-delimiters-depth-3-face) fontified nil) 272 338 (face font-lock-string-face fontified nil) 338 346 (fontified nil) 346 347 (face (rainbow-delimiters-depth-3-face) fontified nil) 347 348 (face (rainbow-delimiters-depth-2-face) fontified nil) 348 349 (fontified nil) 349 351 (fontified nil) 351 352 (face (rainbow-delimiters-depth-2-face) fontified nil) 352 381 (fontified nil) 381 382 (fontified nil) 382 383 (face (rainbow-delimiters-depth-3-face) fontified nil) 383 545 (fontified nil) 545 546 (face (rainbow-delimiters-depth-3-face) fontified nil) 546 547 (face (rainbow-delimiters-depth-2-face) fontified nil) 547 548 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3270) 3207) nil (25466 37297 761622 905000) 0 nil])
([nil nil ((3296 . 3299) (#("n" 0 1 (face font-lock-constant-face fontified t)) . -3296) (undo-tree-id1752 . -1) (#("s" 0 1 (face font-lock-constant-face fontified t)) . -3297) (undo-tree-id1753 . -1) 3298 (3290 . 3298) (3275 . 3290) (#("a" 0 1 (fontified t)) . -3275) (undo-tree-id1754 . -1) 3276 (3274 . 3276) (#("p" 0 1 (fontified t)) . -3274) (undo-tree-id1755 . -1) (#("a" 0 1 (fontified t)) . -3275) (undo-tree-id1756 . -1) (#("c" 0 1 (fontified t)) . -3276) (undo-tree-id1757 . -1) 3277 (3271 . 3277) (3270 . 3272) (#("(" 0 1 (fontified nil)) . -3270) (3270 . 3271) (3269 . 3270) (3268 . 3269) (t . 0) 3241) nil (25466 37378 555164 173000) 0 nil])
([nil nil ((3881 . 4120) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 19 (fontified nil) 19 22 (face font-lock-comment-delimiter-face fontified nil) 22 60 (face font-lock-comment-face fontified nil) 60 61 (fontified nil) 61 64 (face font-lock-comment-delimiter-face fontified nil) 64 125 (face font-lock-comment-face fontified nil) 125 126 (fontified nil) 126 129 (face font-lock-comment-delimiter-face fontified nil) 129 183 (face font-lock-comment-face fontified nil) 183 184 (fontified nil) 184 187 (face font-lock-comment-delimiter-face fontified nil) 187 237 (face font-lock-comment-face fontified nil) 237 238 (fontified nil) 238 239 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3881) (3878 . 3880) (#("
" 0 1 (fontified nil)) . -3878) (3679 . 3879) (#(" " 0 1 (fontified nil)) . 3679) (3649 . 3680) (#("
" 0 1 (fontified nil)) . -3649) (3568 . 3650) (#(" " 0 1 (fontified nil)) . 3568) (3302 . 3569) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '(\"1a1ac598737d0fcdc4dfab3af3d6f46ab2d5048b8e72bc22f50271fd6d393a00\" default))
 '(package-selected-packages
   '(centaur-tabs tab-jump-out smartparens consult treesitter general lsp-mode undo-tree auctex doom-themes doom-theme all-the-icons evil doom-modeline command-log-mode use-package)))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 23 (fontified nil) 23 26 (face font-lock-comment-delimiter-face fontified nil) 26 68 (face font-lock-comment-face fontified nil) 68 69 (fontified nil) 69 72 (face font-lock-comment-delimiter-face fontified nil) 72 133 (face font-lock-comment-face fontified nil) 133 134 (fontified nil) 134 137 (face font-lock-comment-delimiter-face fontified nil) 137 191 (face font-lock-comment-face fontified nil) 191 192 (fontified nil) 192 195 (face font-lock-comment-delimiter-face fontified nil) 195 245 (face font-lock-comment-face fontified nil) 245 247 (fontified nil) 247 248 (face (rainbow-delimiters-depth-2-face) fontified nil) 248 270 (fontified nil) 270 271 (fontified nil) 271 272 (face (rainbow-delimiters-depth-3-face) fontified nil) 272 338 (face font-lock-string-face fontified nil) 338 346 (fontified nil) 346 347 (face (rainbow-delimiters-depth-3-face) fontified nil) 347 348 (face (rainbow-delimiters-depth-2-face) fontified nil) 348 349 (fontified nil) 349 351 (fontified nil) 351 352 (face (rainbow-delimiters-depth-2-face) fontified nil) 352 381 (fontified nil) 381 382 (fontified nil) 382 383 (face (rainbow-delimiters-depth-3-face) fontified nil) 383 558 (fontified nil) 558 559 (face (rainbow-delimiters-depth-3-face) fontified nil) 559 560 (face (rainbow-delimiters-depth-2-face) fontified nil) 560 561 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3302)) nil (25466 37386 185202 855000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-constant-face fontified t)) . -3298) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) 3299 (t . 0)) nil (25466 37410 575708 734000) 0 nil])
([nil nil ((3896 . 4135) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 19 (fontified nil) 19 22 (face font-lock-comment-delimiter-face fontified nil) 22 60 (face font-lock-comment-face fontified nil) 60 61 (fontified nil) 61 64 (face font-lock-comment-delimiter-face fontified nil) 64 125 (face font-lock-comment-face fontified nil) 125 126 (fontified nil) 126 129 (face font-lock-comment-delimiter-face fontified nil) 129 183 (face font-lock-comment-face fontified nil) 183 184 (fontified nil) 184 187 (face font-lock-comment-delimiter-face fontified nil) 187 237 (face font-lock-comment-face fontified nil) 237 238 (fontified nil) 238 239 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3896) (3893 . 3895) (#("
" 0 1 (fontified nil)) . -3893) (3678 . 3894) (#(" " 0 1 (fontified nil)) . 3678) (3648 . 3679) (#("
" 0 1 (fontified nil)) . -3648) (3567 . 3649) (#(" " 0 1 (fontified nil)) . 3567) (3301 . 3568) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '(\"1a1ac598737d0fcdc4dfab3af3d6f46ab2d5048b8e72bc22f50271fd6d393a00\" default))
 '(package-selected-packages
   '(evil-collections centaur-tabs tab-jump-out smartparens consult treesitter general lsp-mode undo-tree auctex doom-themes doom-theme all-the-icons evil doom-modeline command-log-mode use-package)))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 23 (fontified nil) 23 26 (face font-lock-comment-delimiter-face fontified nil) 26 68 (face font-lock-comment-face fontified nil) 68 69 (fontified nil) 69 72 (face font-lock-comment-delimiter-face fontified nil) 72 133 (face font-lock-comment-face fontified nil) 133 134 (fontified nil) 134 137 (face font-lock-comment-delimiter-face fontified nil) 137 191 (face font-lock-comment-face fontified nil) 191 192 (fontified nil) 192 195 (face font-lock-comment-delimiter-face fontified nil) 195 245 (face font-lock-comment-face fontified nil) 245 247 (fontified nil) 247 248 (face (rainbow-delimiters-depth-2-face) fontified nil) 248 270 (fontified nil) 270 271 (fontified nil) 271 272 (face (rainbow-delimiters-depth-3-face) fontified nil) 272 338 (face font-lock-string-face fontified nil) 338 346 (fontified nil) 346 347 (face (rainbow-delimiters-depth-3-face) fontified nil) 347 348 (face (rainbow-delimiters-depth-2-face) fontified nil) 348 349 (fontified nil) 349 351 (fontified nil) 351 352 (face (rainbow-delimiters-depth-2-face) fontified nil) 352 381 (fontified nil) 381 382 (fontified nil) 382 383 (face (rainbow-delimiters-depth-3-face) fontified nil) 383 575 (fontified nil) 575 576 (face (rainbow-delimiters-depth-3-face) fontified nil) 576 577 (face (rainbow-delimiters-depth-2-face) fontified nil) 577 578 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3301) 3297) nil (25466 37412 884003 367000) 0 nil])
([nil nil ((3299 . 3300) (t . 0) 3297) nil (25466 37428 209327 820000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3321 . 3322) (nil fontified nil 3300 . 3322) (3300 . 3322)) nil (25466 37428 209323 454000) 0 nil])
([nil nil ((3322 . 3323) (t 25466 37428 221781 855000) 3321) nil (25466 37609 788840 313000) 0 nil])
([nil nil ((3345 . 3350) (3325 . 3345) (3324 . 3326) (#("(" 0 1 (fontified nil)) . -3324) (3324 . 3325) (3323 . 3324) 3323) nil (25466 37609 788834 771000) 0 nil])
([nil nil ((3962 . 4201) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 19 (fontified nil) 19 22 (face font-lock-comment-delimiter-face fontified nil) 22 60 (face font-lock-comment-face fontified nil) 60 61 (fontified nil) 61 64 (face font-lock-comment-delimiter-face fontified nil) 64 125 (face font-lock-comment-face fontified nil) 125 126 (fontified nil) 126 129 (face font-lock-comment-delimiter-face fontified nil) 129 183 (face font-lock-comment-face fontified nil) 183 184 (fontified nil) 184 187 (face font-lock-comment-delimiter-face fontified nil) 187 237 (face font-lock-comment-face fontified nil) 237 238 (fontified nil) 238 239 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3962) (3959 . 3961) (#("
" 0 1 (fontified nil)) . -3959) (3730 . 3960) (#(" " 0 1 (fontified nil)) . 3730) (3700 . 3731) (#("
" 0 1 (fontified nil)) . -3700) (3619 . 3701) (#(" " 0 1 (fontified nil)) . 3619) (3353 . 3620) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '(\"1a1ac598737d0fcdc4dfab3af3d6f46ab2d5048b8e72bc22f50271fd6d393a00\" default))
 '(package-selected-packages
   '(evil-collection evil-collections centaur-tabs tab-jump-out smartparens consult treesitter general lsp-mode undo-tree auctex doom-themes doom-theme all-the-icons evil doom-modeline command-log-mode use-package)))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 23 (fontified nil) 23 26 (face font-lock-comment-delimiter-face fontified nil) 26 68 (face font-lock-comment-face fontified nil) 68 69 (fontified nil) 69 72 (face font-lock-comment-delimiter-face fontified nil) 72 133 (face font-lock-comment-face fontified nil) 133 134 (fontified nil) 134 137 (face font-lock-comment-delimiter-face fontified nil) 137 191 (face font-lock-comment-face fontified nil) 191 192 (fontified nil) 192 195 (face font-lock-comment-delimiter-face fontified nil) 195 245 (face font-lock-comment-face fontified nil) 245 247 (fontified nil) 247 248 (face (rainbow-delimiters-depth-2-face) fontified nil) 248 270 (fontified nil) 270 271 (fontified nil) 271 272 (face (rainbow-delimiters-depth-3-face) fontified nil) 272 338 (face font-lock-string-face fontified nil) 338 346 (fontified nil) 346 347 (face (rainbow-delimiters-depth-3-face) fontified nil) 347 348 (face (rainbow-delimiters-depth-2-face) fontified nil) 348 349 (fontified nil) 349 351 (fontified nil) 351 352 (face (rainbow-delimiters-depth-2-face) fontified nil) 352 381 (fontified nil) 381 382 (fontified nil) 382 383 (face (rainbow-delimiters-depth-3-face) fontified nil) 383 591 (fontified nil) 591 592 (face (rainbow-delimiters-depth-3-face) fontified nil) 592 593 (face (rainbow-delimiters-depth-2-face) fontified nil) 593 594 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3353) 3349) nil (25466 37611 630261 749000) 0 nil])
([nil nil ((3368 . 3375) (#("-" 0 1 (face font-lock-constant-face fontified t)) . -3368) (undo-tree-id1767 . -1) 3369 (3368 . 3369) (#(" " 0 1 (fontified t)) . -3368) (undo-tree-id1768 . -1) 3369 (3354 . 3369) (3353 . 3355) (#("(" 0 1 (fontified nil)) . -3353) (3353 . 3354) (3351 . 3353) (#("
" 0 1 (fontified t)) . -3351) (undo-tree-id1769 . -1) (#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3352) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . 1) (undo-tree-id1773 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . -3353) (undo-tree-id1774 . -1) (undo-tree-id1775 . 1) (undo-tree-id1776 . -1) 3354 (3352 . 3354) (#("(" 0 1 (fontified nil)) . -3352) (3352 . 3353) (#("\\" 0 1 (fontified t)) . -3352) (undo-tree-id1777 . -1) 3353 (3352 . 3353) (3351 . 3352) (t . 0)) nil (25466 37646 153638 643000) 0 nil])
([nil nil ((3997 . 4236) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 19 (fontified nil) 19 22 (face font-lock-comment-delimiter-face fontified nil) 22 60 (face font-lock-comment-face fontified nil) 60 61 (fontified nil) 61 64 (face font-lock-comment-delimiter-face fontified nil) 64 125 (face font-lock-comment-face fontified nil) 125 126 (fontified nil) 126 129 (face font-lock-comment-delimiter-face fontified nil) 129 183 (face font-lock-comment-face fontified nil) 183 184 (fontified nil) 184 187 (face font-lock-comment-delimiter-face fontified nil) 187 237 (face font-lock-comment-face fontified nil) 237 238 (fontified nil) 238 239 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3997) (3994 . 3996) (#("
" 0 1 (fontified nil)) . -3994) (3755 . 3995) (#(" " 0 1 (fontified nil)) . 3755) (3725 . 3756) (#("
" 0 1 (fontified nil)) . -3725) (3644 . 3726) (#(" " 0 1 (fontified nil)) . 3644) (3378 . 3645) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '(\"1a1ac598737d0fcdc4dfab3af3d6f46ab2d5048b8e72bc22f50271fd6d393a00\" default))
 '(package-selected-packages
   '(auto-complete evil-collection evil-collections centaur-tabs tab-jump-out smartparens consult treesitter general lsp-mode undo-tree auctex doom-themes doom-theme all-the-icons evil doom-modeline command-log-mode use-package)))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 23 (fontified nil) 23 26 (face font-lock-comment-delimiter-face fontified nil) 26 68 (face font-lock-comment-face fontified nil) 68 69 (fontified nil) 69 72 (face font-lock-comment-delimiter-face fontified nil) 72 133 (face font-lock-comment-face fontified nil) 133 134 (fontified nil) 134 137 (face font-lock-comment-delimiter-face fontified nil) 137 191 (face font-lock-comment-face fontified nil) 191 192 (fontified nil) 192 195 (face font-lock-comment-delimiter-face fontified nil) 195 245 (face font-lock-comment-face fontified nil) 245 247 (fontified nil) 247 248 (face (rainbow-delimiters-depth-2-face) fontified nil) 248 270 (fontified nil) 270 271 (fontified nil) 271 272 (face (rainbow-delimiters-depth-3-face) fontified nil) 272 338 (face font-lock-string-face fontified nil) 338 346 (fontified nil) 346 347 (face (rainbow-delimiters-depth-3-face) fontified nil) 347 348 (face (rainbow-delimiters-depth-2-face) fontified nil) 348 349 (fontified nil) 349 351 (fontified nil) 351 352 (face (rainbow-delimiters-depth-2-face) fontified nil) 352 381 (fontified nil) 381 382 (fontified nil) 382 383 (face (rainbow-delimiters-depth-3-face) fontified nil) 383 605 (fontified nil) 605 606 (face (rainbow-delimiters-depth-3-face) fontified nil) 606 607 (face (rainbow-delimiters-depth-2-face) fontified nil) 607 608 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3378) 3374) nil (25466 37648 311360 992000) 0 nil])
([nil nil ((3376 . 3377) (t . 0) 3374) nil (25466 37775 471609 65000) 0 nil])
([nil nil ((3394 . 3399) (#("d" 0 1 (face font-lock-constant-face fontified t)) . -3394) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) 3395 (3382 . 3395) (#(" " 0 1 (fontified t)) . -3382) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) 3383 (3379 . 3383) (3378 . 3380) (#("(" 0 1 (fontified nil)) . -3378) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (3378 . 3379) (3377 . 3378) 3377) nil (25466 37775 471603 317000) 0 nil])
([nil nil ((4030 . 4269) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 19 (fontified nil) 19 22 (face font-lock-comment-delimiter-face fontified nil) 22 60 (face font-lock-comment-face fontified nil) 60 61 (fontified nil) 61 64 (face font-lock-comment-delimiter-face fontified nil) 64 125 (face font-lock-comment-face fontified nil) 125 126 (fontified nil) 126 129 (face font-lock-comment-delimiter-face fontified nil) 129 183 (face font-lock-comment-face fontified nil) 183 184 (fontified nil) 184 187 (face font-lock-comment-delimiter-face fontified nil) 187 237 (face font-lock-comment-face fontified nil) 237 238 (fontified nil) 238 239 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -4030) (4027 . 4029) (#("
" 0 1 (fontified nil)) . -4027) (3779 . 4028) (#(" " 0 1 (fontified nil)) . 3779) (3749 . 3780) (#("
" 0 1 (fontified nil)) . -3749) (3668 . 3750) (#(" " 0 1 (fontified nil)) . 3668) (3402 . 3669) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '(\"1a1ac598737d0fcdc4dfab3af3d6f46ab2d5048b8e72bc22f50271fd6d393a00\" default))
 '(package-selected-packages
   '(yasnippet auto-complete evil-collection evil-collections centaur-tabs tab-jump-out smartparens consult treesitter general lsp-mode undo-tree auctex doom-themes doom-theme all-the-icons evil doom-modeline command-log-mode use-package)))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 23 (fontified nil) 23 26 (face font-lock-comment-delimiter-face fontified nil) 26 68 (face font-lock-comment-face fontified nil) 68 69 (fontified nil) 69 72 (face font-lock-comment-delimiter-face fontified nil) 72 133 (face font-lock-comment-face fontified nil) 133 134 (fontified nil) 134 137 (face font-lock-comment-delimiter-face fontified nil) 137 191 (face font-lock-comment-face fontified nil) 191 192 (fontified nil) 192 195 (face font-lock-comment-delimiter-face fontified nil) 195 245 (face font-lock-comment-face fontified nil) 245 247 (fontified nil) 247 248 (face (rainbow-delimiters-depth-2-face) fontified nil) 248 270 (fontified nil) 270 271 (fontified nil) 271 272 (face (rainbow-delimiters-depth-3-face) fontified nil) 272 338 (face font-lock-string-face fontified nil) 338 346 (fontified nil) 346 347 (face (rainbow-delimiters-depth-3-face) fontified nil) 347 348 (face (rainbow-delimiters-depth-2-face) fontified nil) 348 349 (fontified nil) 349 351 (fontified nil) 351 352 (face (rainbow-delimiters-depth-2-face) fontified nil) 352 381 (fontified nil) 381 382 (fontified nil) 382 383 (face (rainbow-delimiters-depth-3-face) fontified nil) 383 615 (fontified nil) 615 616 (face (rainbow-delimiters-depth-3-face) fontified nil) 616 617 (face (rainbow-delimiters-depth-2-face) fontified nil) 617 618 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3402) 3398) nil (25466 37777 152572 699000) 0 nil])
([nil nil ((3429 . 3433) (3424 . 3429) (#("w" 0 1 (face font-lock-constant-face fontified t)) . -3424) (undo-tree-id1816 . -1) 3425 (3422 . 3425) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -3422) (undo-tree-id1817 . -1) (#("r" 0 1 (face font-lock-constant-face fontified t)) . -3423) (undo-tree-id1818 . -1) (#("v" 0 1 (face font-lock-constant-face fontified t)) . -3424) (undo-tree-id1819 . -1) (#("i" 0 1 (face font-lock-constant-face fontified t)) . -3425) (undo-tree-id1820 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -3426) (undo-tree-id1821 . -1) (#("w" 0 1 (face font-lock-constant-face fontified t)) . -3427) (undo-tree-id1822 . -1) 3428 (3409 . 3428) (#("c" 0 1 (fontified t)) . -3409) (undo-tree-id1823 . -1) (#("k" 0 1 (fontified t)) . -3410) (undo-tree-id1824 . -1) 3411 (3405 . 3411) (#("a" 0 1 (fontified t)) . -3405) (undo-tree-id1825 . -1) 3406 (3403 . 3406) (3402 . 3404) (#("(" 0 1 (fontified nil)) . -3402) (3402 . 3403) (3401 . 3402) (3400 . 3401) (t . 0) 3398) nil (25466 37870 729651 145000) 0 nil])
([nil nil ((4083 . 4322) (#("(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 19 (fontified nil) 19 22 (face font-lock-comment-delimiter-face fontified nil) 22 60 (face font-lock-comment-face fontified nil) 60 61 (fontified nil) 61 64 (face font-lock-comment-delimiter-face fontified nil) 64 125 (face font-lock-comment-face fontified nil) 125 126 (fontified nil) 126 129 (face font-lock-comment-delimiter-face fontified nil) 129 183 (face font-lock-comment-face fontified nil) 183 184 (fontified nil) 184 187 (face font-lock-comment-delimiter-face fontified nil) 187 237 (face font-lock-comment-face fontified nil) 237 238 (fontified nil) 238 239 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -4083) (4080 . 4082) (#("
" 0 1 (fontified nil)) . -4080) (3813 . 4081) (#(" " 0 1 (fontified nil)) . 3813) (3783 . 3814) (#("
" 0 1 (fontified nil)) . -3783) (3702 . 3784) (#(" " 0 1 (fontified nil)) . 3702) (3436 . 3703) (#("(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '(\"1a1ac598737d0fcdc4dfab3af3d6f46ab2d5048b8e72bc22f50271fd6d393a00\" default))
 '(package-selected-packages
   '(lua-mode yasnippet auto-complete evil-collection evil-collections centaur-tabs tab-jump-out smartparens consult treesitter general lsp-mode undo-tree auctex doom-themes doom-theme all-the-icons evil doom-modeline command-log-mode use-package)))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil) 1 23 (fontified nil) 23 26 (face font-lock-comment-delimiter-face fontified nil) 26 68 (face font-lock-comment-face fontified nil) 68 69 (fontified nil) 69 72 (face font-lock-comment-delimiter-face fontified nil) 72 133 (face font-lock-comment-face fontified nil) 133 134 (fontified nil) 134 137 (face font-lock-comment-delimiter-face fontified nil) 137 191 (face font-lock-comment-face fontified nil) 191 192 (fontified nil) 192 195 (face font-lock-comment-delimiter-face fontified nil) 195 245 (face font-lock-comment-face fontified nil) 245 247 (fontified nil) 247 248 (face (rainbow-delimiters-depth-2-face) fontified nil) 248 270 (fontified nil) 270 271 (fontified nil) 271 272 (face (rainbow-delimiters-depth-3-face) fontified nil) 272 338 (face font-lock-string-face fontified nil) 338 346 (fontified nil) 346 347 (face (rainbow-delimiters-depth-3-face) fontified nil) 347 348 (face (rainbow-delimiters-depth-2-face) fontified nil) 348 349 (fontified nil) 349 351 (fontified nil) 351 352 (face (rainbow-delimiters-depth-2-face) fontified nil) 352 381 (fontified nil) 381 382 (fontified nil) 382 383 (face (rainbow-delimiters-depth-3-face) fontified nil) 383 624 (fontified nil) 624 625 (face (rainbow-delimiters-depth-3-face) fontified nil) 625 626 (face (rainbow-delimiters-depth-2-face) fontified nil) 626 627 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -3436) 3432) nil (25466 37872 525440 479000) 0 nil])
([nil nil (1) nil (25466 40626 312983 317000) 0 nil])
([nil current ((1 . 3) (t 25466 37872 538439 907000)) nil (25466 40626 312978 889000) 0 nil])
nil
